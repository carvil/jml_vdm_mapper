//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.visitor;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class VdmPpVisitor extends OmlVisitor {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=result KEEP=NO
  public String result = null;
// ***** VDMTOOLS END Name=result

// ***** VDMTOOLS START Name=lvl KEEP=NO
  private Long lvl = null;
// ***** VDMTOOLS END Name=lvl

// ***** VDMTOOLS START Name=nl KEEP=NO
  private static final String nl = new String("\015\n");
// ***** VDMTOOLS END Name=nl

// ***** VDMTOOLS START Name=prefix KEEP=NO
  private static final String prefix = new String("new Oml");
// ***** VDMTOOLS END Name=prefix


// ***** VDMTOOLS START Name=VdmPpVisitor KEEP=NO
  public VdmPpVisitor () throws CGException {
    try {

      result = UTIL.ConvertToString(new String());
      lvl = new Long(0);
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=VdmPpVisitor


// ***** VDMTOOLS START Name=pushNL KEEP=NO
  private void pushNL () throws CGException {
    lvl = UTIL.NumberToLong(UTIL.clone(new Long(lvl.intValue() + new Long(2).intValue())));
  }
// ***** VDMTOOLS END Name=pushNL


// ***** VDMTOOLS START Name=popNL KEEP=NO
  private void popNL () throws CGException {
    lvl = UTIL.NumberToLong(UTIL.clone(new Long(lvl.intValue() - new Long(2).intValue())));
  }
// ***** VDMTOOLS END Name=popNL


// ***** VDMTOOLS START Name=getNL KEEP=NO
  private String getNL () throws CGException {

    String res = nl;
    Long cnt = lvl;
    while ( new Boolean((cnt.intValue()) > (new Long(0).intValue())).booleanValue()){

      String rhs_4 = null;
      rhs_4 = res.concat(new String(" "));
      res = UTIL.ConvertToString(UTIL.clone(rhs_4));
      cnt = UTIL.NumberToLong(UTIL.clone(new Long(cnt.intValue() - new Long(1).intValue())));
    }
    return res;
  }
// ***** VDMTOOLS END Name=getNL


// ***** VDMTOOLS START Name=printBoolField KEEP=NO
  private void printBoolField (final Boolean pval) throws CGException {

    String rhs_2 = null;
    if (pval.booleanValue()) 
      rhs_2 = new String("true");
    else 
      rhs_2 = new String("false");
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printBoolField


// ***** VDMTOOLS START Name=printCharField KEEP=NO
  private void printCharField (final Character pval) throws CGException {

    String rhs_2 = null;
    rhs_2 = new String();
    rhs_2 = rhs_2 + new Character('\'');
    rhs_2 = rhs_2 + pval;
    rhs_2 = rhs_2 + new Character('\'');
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printCharField


// ***** VDMTOOLS START Name=printNatField KEEP=NO
  private void printNatField (final Long var_1_1) throws CGException {

    UTIL.RunTime("Run-Time Error:Can not evaluate an error statement");
    return;
  }
// ***** VDMTOOLS END Name=printNatField


// ***** VDMTOOLS START Name=printRealField KEEP=NO
  private void printRealField (final Double var_1_1) throws CGException {

    UTIL.RunTime("Run-Time Error:Can not evaluate an error statement");
    return;
  }
// ***** VDMTOOLS END Name=printRealField


// ***** VDMTOOLS START Name=printNodeField KEEP=NO
  private void printNodeField (final IOmlNode pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=printNodeField


// ***** VDMTOOLS START Name=patchString KEEP=NO
  private String patchString (final String str) throws CGException {

    String res = UTIL.ConvertToString(new String());
    {

      Character ch = null;
      for (Iterator enm_21 = ((Vector) UTIL.ConvertToList(str)).iterator(); enm_21.hasNext(); ) {

        Character elem_3 = (Character) enm_21.next();
        ch = elem_3;
        if (new Boolean(UTIL.equals(ch, new Character('\\'))).booleanValue()) {

          String rhs_17 = null;
          rhs_17 = res.concat(new String("\\\\"));
          res = UTIL.ConvertToString(UTIL.clone(rhs_17));
        }
        else 
          if (new Boolean(UTIL.equals(ch, new Character('\"'))).booleanValue()) {

            String rhs_14 = null;
            rhs_14 = res.concat(new String("\\\""));
            res = UTIL.ConvertToString(UTIL.clone(rhs_14));
          }
          else 
            res = res + ch;
      }
    }
    return res;
  }
// ***** VDMTOOLS END Name=patchString


// ***** VDMTOOLS START Name=printStringField KEEP=NO
  private void printStringField (final String str) throws CGException {

    String rhs_2 = null;
    String var1_3 = null;
    var1_3 = new String("\"").concat(patchString(str));
    rhs_2 = var1_3.concat(new String("\""));
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printStringField


// ***** VDMTOOLS START Name=printSeqofField KEEP=NO
  private void printSeqofField (final Vector pval) throws CGException {

    String str = new String("[");
    Long cnt = new Long(pval.size());
    pushNL();
    String rhs_4 = null;
    rhs_4 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    while ( new Boolean((cnt.intValue()) > (new Long(0).intValue())).booleanValue()){

      Object tmpArg_v_11 = null;
      if ((1 <= new Long(new Long(new Long(pval.size()).intValue() - cnt.intValue()).intValue() + new Long(1).intValue()).intValue()) && (new Long(new Long(new Long(pval.size()).intValue() - cnt.intValue()).intValue() + new Long(1).intValue()).intValue() <= pval.size())) 
        tmpArg_v_11 = pval.get(new Long(new Long(new Long(pval.size()).intValue() - cnt.intValue()).intValue() + new Long(1).intValue()).intValue() - 1);
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      printField(tmpArg_v_11);
      String rhs_19 = null;
      rhs_19 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_19));
      if (new Boolean((cnt.intValue()) > (new Long(1).intValue())).booleanValue()) {

        String rhs_25 = null;
        String var1_26 = null;
        var1_26 = str.concat(new String(","));
        rhs_25 = var1_26.concat(getNL());
        str = UTIL.ConvertToString(UTIL.clone(rhs_25));
      }
      cnt = UTIL.NumberToLong(UTIL.clone(new Long(cnt.intValue() - new Long(1).intValue())));
    }
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String("]"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printSeqofField


// ***** VDMTOOLS START Name=printSetofField KEEP=NO
  private void printSetofField (final HashSet pval) throws CGException {

    String str = new String("{");
    Long cnt = new Long(pval.size());
    HashSet pvs = pval;
    pushNL();
    String rhs_4 = null;
    rhs_4 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    while ( new Boolean((cnt.intValue()) > (new Long(0).intValue())).booleanValue()){

      HashSet tmpSet_10 = new HashSet();
      tmpSet_10 = pvs;
      Object pv = null;
      boolean succ_12 = false;
      for (Iterator enm_14 = tmpSet_10.iterator(); enm_14.hasNext() && !succ_12; ) {

        Object tmpElem_13 = enm_14.next();
        succ_12 = true;
        pv = tmpElem_13;
      }
      if (!succ_12) 
        UTIL.RunTime("Run-Time Error:The binding environment was empty");
      {

        printField(pv);
        String rhs_17 = null;
        rhs_17 = str.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_17));
        HashSet rhs_20 = new HashSet();
        HashSet var2_22 = new HashSet();
        var2_22 = new HashSet();
        var2_22.add(pv);
        rhs_20 = (HashSet) pvs.clone();
        rhs_20.removeAll(var2_22);
        pvs = (HashSet) UTIL.clone(rhs_20);
        if (new Boolean((cnt.intValue()) > (new Long(1).intValue())).booleanValue()) {

          String rhs_27 = null;
          String var1_28 = null;
          var1_28 = str.concat(new String(","));
          rhs_27 = var1_28.concat(getNL());
          str = UTIL.ConvertToString(UTIL.clone(rhs_27));
        }
        cnt = UTIL.NumberToLong(UTIL.clone(new Long(cnt.intValue() - new Long(1).intValue())));
      }
    }
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String("}"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printSetofField


// ***** VDMTOOLS START Name=printMapField KEEP=NO
  private void printMapField (final HashMap pval) throws CGException {

    String str = new String("{");
    Long cnt = null;
    HashSet unArg_2 = new HashSet();
    unArg_2.clear();
    unArg_2.addAll(pval.keySet());
    cnt = new Long(unArg_2.size());
    HashSet pvs = new HashSet();
    pvs.clear();
    pvs.addAll(pval.keySet());
    pushNL();
    String rhs_6 = null;
    rhs_6 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    while ( new Boolean((cnt.intValue()) > (new Long(0).intValue())).booleanValue()){

      HashSet tmpSet_12 = new HashSet();
      tmpSet_12 = pvs;
      Object pv = null;
      boolean succ_14 = false;
      for (Iterator enm_16 = tmpSet_12.iterator(); enm_16.hasNext() && !succ_14; ) {

        Object tmpElem_15 = enm_16.next();
        succ_14 = true;
        pv = tmpElem_15;
      }
      if (!succ_14) 
        UTIL.RunTime("Run-Time Error:The binding environment was empty");
      {

        printField(pv);
        String rhs_19 = null;
        String var1_20 = null;
        var1_20 = str.concat(result);
        rhs_19 = var1_20.concat(new String(" |-> "));
        str = UTIL.ConvertToString(UTIL.clone(rhs_19));
        printField(pval.get(pv));
        String rhs_28 = null;
        rhs_28 = str.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_28));
        HashSet rhs_31 = new HashSet();
        HashSet var2_33 = new HashSet();
        var2_33 = new HashSet();
        var2_33.add(pv);
        rhs_31 = (HashSet) pvs.clone();
        rhs_31.removeAll(var2_33);
        pvs = (HashSet) UTIL.clone(rhs_31);
        if (new Boolean((cnt.intValue()) > (new Long(1).intValue())).booleanValue()) {

          String rhs_38 = null;
          String var1_39 = null;
          var1_39 = str.concat(new String(","));
          rhs_38 = var1_39.concat(getNL());
          str = UTIL.ConvertToString(UTIL.clone(rhs_38));
        }
        cnt = UTIL.NumberToLong(UTIL.clone(new Long(cnt.intValue() - new Long(1).intValue())));
      }
    }
    popNL();
    String rhs_47 = null;
    String var1_48 = null;
    var1_48 = str.concat(getNL());
    rhs_47 = var1_48.concat(new String("}"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_47));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printMapField


// ***** VDMTOOLS START Name=printField KEEP=NO
  private void printField (final Object fld) throws CGException {
    if (new Boolean((fld instanceof Boolean)).booleanValue()) 
      printBoolField((Boolean) fld);
    else 
      if (new Boolean((fld instanceof Character)).booleanValue()) 
        printCharField((Character) fld);
      else {
        if (new Boolean(UTIL.IsInteger(fld) && ((Number) fld).intValue() >= 0).booleanValue()) 
          printNatField(UTIL.NumberToLong(fld));
        else {
          if (new Boolean(UTIL.IsReal(fld)).booleanValue()) 
            printRealField(UTIL.NumberToReal(fld));
          else {

            Boolean cond_6 = null;
            cond_6 = new Boolean(fld instanceof IOmlNode);
            if (cond_6.booleanValue()) 
              printNodeField((IOmlNode) fld);
            else {
              printStringField(UTIL.ConvertToString(fld));
            }
          }
        }
      }
  }
// ***** VDMTOOLS END Name=printField


// ***** VDMTOOLS START Name=visitNode KEEP=NO
  public void visitNode (final IOmlNode pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitNode


// ***** VDMTOOLS START Name=visitDocument KEEP=NO
  public void visitDocument (final IOmlDocument pcmp) throws CGException {

    String str = new String("new OmlDocument(");
    Vector lxms = null;
    lxms = pcmp.getLexems();
    pushNL();
    String tmpArg_v_4 = null;
    tmpArg_v_4 = pcmp.getFilename();
    printStringField(tmpArg_v_4);
    String rhs_5 = null;
    String var1_6 = null;
    String var1_7 = null;
    var1_7 = str.concat(result);
    var1_6 = var1_7.concat(new String(","));
    rhs_5 = var1_6.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_5));
    Boolean cond_12 = null;
    cond_12 = pcmp.hasSpecifications();
    if (cond_12.booleanValue()) {

      IOmlSpecifications tmpArg_v_14 = null;
      tmpArg_v_14 = (IOmlSpecifications) pcmp.getSpecifications();
      visitSpecifications((IOmlSpecifications) tmpArg_v_14);
    }
    Boolean cond_15 = null;
    cond_15 = pcmp.hasExpression();
    if (cond_15.booleanValue()) {

      IOmlExpression tmpArg_v_17 = null;
      tmpArg_v_17 = (IOmlExpression) pcmp.getExpression();
      visitExpression((IOmlExpression) tmpArg_v_17);
    }
    String rhs_18 = null;
    String var1_19 = null;
    String var1_20 = null;
    var1_20 = str.concat(result);
    var1_19 = var1_20.concat(new String(","));
    rhs_18 = var1_19.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    String rhs_25 = null;
    rhs_25 = str.concat(new String("["));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    if (new Boolean((new Long(lxms.size()).intValue()) > (new Long(0).intValue())).booleanValue()) {

      pushNL();
      while ( new Boolean((new Long(lxms.size()).intValue()) > (new Long(0).intValue())).booleanValue()){

        visitLexem((IOmlLexem) (IOmlLexem) lxms.get(0));
        String rhs_40 = null;
        String var1_41 = null;
        var1_41 = str.concat(getNL());
        rhs_40 = var1_41.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_40));
        lxms = (Vector) UTIL.ConvertToList(UTIL.clone(new Vector(lxms.subList(1, lxms.size()))));
        if (new Boolean((new Long(lxms.size()).intValue()) > (new Long(0).intValue())).booleanValue()) {

          String rhs_51 = null;
          rhs_51 = str.concat(new String(","));
          str = UTIL.ConvertToString(UTIL.clone(rhs_51));
        }
      }
      popNL();
    }
    String rhs_55 = null;
    String var1_56 = null;
    var1_56 = str.concat(getNL());
    rhs_55 = var1_56.concat(new String("]"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_55));
    popNL();
    String rhs_61 = null;
    String var1_62 = null;
    var1_62 = str.concat(getNL());
    rhs_61 = var1_62.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDocument


// ***** VDMTOOLS START Name=visitLexem KEEP=NO
  public void visitLexem (final IOmlLexem pcmp) throws CGException {

    String str = new String("new OmlLexem(");
    Long tmpArg_v_3 = null;
    tmpArg_v_3 = pcmp.getLine();
    printNatField(tmpArg_v_3);
    String rhs_4 = null;
    String var1_5 = null;
    var1_5 = str.concat(result);
    rhs_4 = var1_5.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    Long tmpArg_v_10 = null;
    tmpArg_v_10 = pcmp.getColumn();
    printNatField(tmpArg_v_10);
    String rhs_11 = null;
    String var1_12 = null;
    var1_12 = str.concat(result);
    rhs_11 = var1_12.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Long tmpArg_v_17 = null;
    tmpArg_v_17 = pcmp.getLexval();
    printNatField(tmpArg_v_17);
    String rhs_18 = null;
    String var1_19 = null;
    var1_19 = str.concat(result);
    rhs_18 = var1_19.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    String tmpArg_v_24 = null;
    tmpArg_v_24 = pcmp.getText();
    printStringField(tmpArg_v_24);
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(result);
    rhs_25 = var1_26.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Long tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getType();
    printNatField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    var1_33 = str.concat(result);
    rhs_32 = var1_33.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLexem


// ***** VDMTOOLS START Name=visitOldName KEEP=NO
  public void visitOldName (final IOmlOldName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifier();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOldName


// ***** VDMTOOLS START Name=visitIntType KEEP=NO
  public void visitIntType (final IOmlIntType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIntType


// ***** VDMTOOLS START Name=visitSeqConcPattern KEEP=NO
  public void visitSeqConcPattern (final IOmlSeqConcPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getLhsPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlPattern tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlPattern) pcmp.getRhsPattern();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeqConcPattern


// ***** VDMTOOLS START Name=visitSkipStatement KEEP=NO
  public void visitSkipStatement (final IOmlSkipStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSkipStatement


// ***** VDMTOOLS START Name=visitPeriodicThread KEEP=NO
  public void visitPeriodicThread (final IOmlPeriodicThread pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getArgs();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlName tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPeriodicThread


// ***** VDMTOOLS START Name=visitCallStatement KEEP=NO
  public void visitCallStatement (final IOmlCallStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasObjectDesignator();
    if (cond_10.booleanValue()) {

      IOmlObjectDesignator tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlObjectDesignator) pcmp.getObjectDesignator();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    IOmlName tmpArg_v_22 = null;
    tmpArg_v_22 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Vector tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCallStatement


// ***** VDMTOOLS START Name=visitIsofclassExpression KEEP=NO
  public void visitIsofclassExpression (final IOmlIsofclassExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIsofclassExpression


// ***** VDMTOOLS START Name=visitIndexForLoop KEEP=NO
  public void visitIndexForLoop (final IOmlIndexForLoop pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getInitExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getLimitExpression();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Boolean cond_37 = null;
    cond_37 = pcmp.hasByExpression();
    if (cond_37.booleanValue()) {

      IOmlExpression tmpArg_v_40 = null;
      tmpArg_v_40 = (IOmlExpression) pcmp.getByExpression();
      printNodeField((IOmlNode) tmpArg_v_40);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    IOmlStatement tmpArg_v_49 = null;
    tmpArg_v_49 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_49);
    String rhs_50 = null;
    String var1_51 = null;
    String var1_52 = null;
    var1_52 = str.concat(result);
    var1_51 = var1_52.concat(new String(","));
    rhs_50 = var1_51.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    Long tmpArg_v_58 = null;
    tmpArg_v_58 = pcmp.getLine();
    printNatField(tmpArg_v_58);
    String rhs_59 = null;
    String var1_60 = null;
    String var1_61 = null;
    var1_61 = str.concat(result);
    var1_60 = var1_61.concat(new String(","));
    rhs_59 = var1_60.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_59));
    Long tmpArg_v_67 = null;
    tmpArg_v_67 = pcmp.getColumn();
    printNatField(tmpArg_v_67);
    String rhs_68 = null;
    rhs_68 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_68));
    popNL();
    String rhs_72 = null;
    String var1_73 = null;
    var1_73 = str.concat(getNL());
    rhs_72 = var1_73.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_72));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIndexForLoop


// ***** VDMTOOLS START Name=visitTextLiteral KEEP=NO
  public void visitTextLiteral (final IOmlTextLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTextLiteral


// ***** VDMTOOLS START Name=visitSymbolicLiteralExpression KEEP=NO
  public void visitSymbolicLiteralExpression (final IOmlSymbolicLiteralExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlLiteral) pcmp.getLiteral();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSymbolicLiteralExpression


// ***** VDMTOOLS START Name=visitReqExpression KEEP=NO
  public void visitReqExpression (final IOmlReqExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitReqExpression


// ***** VDMTOOLS START Name=visitPermissionPredicate KEEP=NO
  public void visitPermissionPredicate (final IOmlPermissionPredicate pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPermissionPredicate


// ***** VDMTOOLS START Name=visitProcedureThread KEEP=NO
  public void visitProcedureThread (final IOmlProcedureThread pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlStatement tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitProcedureThread


// ***** VDMTOOLS START Name=visitSetType KEEP=NO
  public void visitSetType (final IOmlSetType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetType


// ***** VDMTOOLS START Name=visitMapEnumeration KEEP=NO
  public void visitMapEnumeration (final IOmlMapEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getMapletList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapEnumeration


// ***** VDMTOOLS START Name=visitNewExpression KEEP=NO
  public void visitNewExpression (final IOmlNewExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getGenericTypes();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNewExpression


// ***** VDMTOOLS START Name=visitAtomicStatement KEEP=NO
  public void visitAtomicStatement (final IOmlAtomicStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getAssignmentList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAtomicStatement


// ***** VDMTOOLS START Name=visitFieldReference KEEP=NO
  public void visitFieldReference (final IOmlFieldReference pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlStateDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlStateDesignator) pcmp.getStateDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    String tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getIdentifier();
    printStringField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFieldReference


// ***** VDMTOOLS START Name=visitClass KEEP=NO
  public void visitClass (final IOmlClass pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getGenericTypes();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasInheritanceClause();
    if (cond_28.booleanValue()) {

      IOmlInheritanceClause tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlInheritanceClause) pcmp.getInheritanceClause();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Vector tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getClassBody();
    printSeqofField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Boolean tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getSystemSpec();
    printBoolField(tmpArg_v_49);
    String rhs_50 = null;
    String var1_51 = null;
    String var1_52 = null;
    var1_52 = str.concat(result);
    var1_51 = var1_52.concat(new String(","));
    rhs_50 = var1_51.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    Long tmpArg_v_58 = null;
    tmpArg_v_58 = pcmp.getLine();
    printNatField(tmpArg_v_58);
    String rhs_59 = null;
    String var1_60 = null;
    String var1_61 = null;
    var1_61 = str.concat(result);
    var1_60 = var1_61.concat(new String(","));
    rhs_59 = var1_60.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_59));
    Long tmpArg_v_67 = null;
    tmpArg_v_67 = pcmp.getColumn();
    printNatField(tmpArg_v_67);
    String rhs_68 = null;
    rhs_68 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_68));
    popNL();
    String rhs_72 = null;
    String var1_73 = null;
    var1_73 = str.concat(getNL());
    rhs_72 = var1_73.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_72));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClass


// ***** VDMTOOLS START Name=visitBlockStatement KEEP=NO
  public void visitBlockStatement (final IOmlBlockStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDclStatementList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getStatementList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBlockStatement


// ***** VDMTOOLS START Name=visitUnaryExpression KEEP=NO
  public void visitUnaryExpression (final IOmlUnaryExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlUnaryOperator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlUnaryOperator) pcmp.getOperator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUnaryExpression


// ***** VDMTOOLS START Name=visitInjectiveMapType KEEP=NO
  public void visitInjectiveMapType (final IOmlInjectiveMapType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInjectiveMapType


// ***** VDMTOOLS START Name=visitNumericLiteral KEEP=NO
  public void visitNumericLiteral (final IOmlNumericLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNumericLiteral


// ***** VDMTOOLS START Name=visitMatchValue KEEP=NO
  public void visitMatchValue (final IOmlMatchValue pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMatchValue


// ***** VDMTOOLS START Name=visitOperationTrailer KEEP=NO
  public void visitOperationTrailer (final IOmlOperationTrailer pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasExternals();
    if (cond_10.booleanValue()) {

      IOmlExternals tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlExternals) pcmp.getExternals();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean cond_21 = null;
    cond_21 = pcmp.hasPreExpression();
    if (cond_21.booleanValue()) {

      IOmlExpression tmpArg_v_24 = null;
      tmpArg_v_24 = (IOmlExpression) pcmp.getPreExpression();
      printNodeField((IOmlNode) tmpArg_v_24);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_25 = null;
    String var1_26 = null;
    String var1_27 = null;
    var1_27 = str.concat(result);
    var1_26 = var1_27.concat(new String(","));
    rhs_25 = var1_26.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_32 = null;
    cond_32 = pcmp.hasPostExpression();
    if (cond_32.booleanValue()) {

      IOmlExpression tmpArg_v_35 = null;
      tmpArg_v_35 = (IOmlExpression) pcmp.getPostExpression();
      printNodeField((IOmlNode) tmpArg_v_35);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_36 = null;
    String var1_37 = null;
    String var1_38 = null;
    var1_38 = str.concat(result);
    var1_37 = var1_38.concat(new String(","));
    rhs_36 = var1_37.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_43 = null;
    cond_43 = pcmp.hasExceptions();
    if (cond_43.booleanValue()) {

      IOmlExceptions tmpArg_v_46 = null;
      tmpArg_v_46 = (IOmlExceptions) pcmp.getExceptions();
      printNodeField((IOmlNode) tmpArg_v_46);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_47 = null;
    String var1_48 = null;
    String var1_49 = null;
    var1_49 = str.concat(result);
    var1_48 = var1_49.concat(new String(","));
    rhs_47 = var1_48.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_47));
    Long tmpArg_v_55 = null;
    tmpArg_v_55 = pcmp.getLine();
    printNatField(tmpArg_v_55);
    String rhs_56 = null;
    String var1_57 = null;
    String var1_58 = null;
    var1_58 = str.concat(result);
    var1_57 = var1_58.concat(new String(","));
    rhs_56 = var1_57.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_56));
    Long tmpArg_v_64 = null;
    tmpArg_v_64 = pcmp.getColumn();
    printNatField(tmpArg_v_64);
    String rhs_65 = null;
    rhs_65 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_65));
    popNL();
    String rhs_69 = null;
    String var1_70 = null;
    var1_70 = str.concat(getNL());
    rhs_69 = var1_70.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_69));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationTrailer


// ***** VDMTOOLS START Name=visitTypeDefinitions KEEP=NO
  public void visitTypeDefinitions (final IOmlTypeDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getTypeList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeDefinitions


// ***** VDMTOOLS START Name=visitTypeBind KEEP=NO
  public void visitTypeBind (final IOmlTypeBind pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPattern();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeBind


// ***** VDMTOOLS START Name=visitRecordModifier KEEP=NO
  public void visitRecordModifier (final IOmlRecordModifier pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRecordModifier


// ***** VDMTOOLS START Name=visitObjectDesignatorExpression KEEP=NO
  public void visitObjectDesignatorExpression (final IOmlObjectDesignatorExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitObjectDesignatorExpression


// ***** VDMTOOLS START Name=visitTraceLetBinding KEEP=NO
  public void visitTraceLetBinding (final IOmlTraceLetBinding pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceLetBinding


// ***** VDMTOOLS START Name=visitIdentifierTypePair KEEP=NO
  public void visitIdentifierTypePair (final IOmlIdentifierTypePair pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIdentifierTypePair


// ***** VDMTOOLS START Name=visitRealLiteral KEEP=NO
  public void visitRealLiteral (final IOmlRealLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Double tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printRealField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRealLiteral


// ***** VDMTOOLS START Name=visitPatternBindExpression KEEP=NO
  public void visitPatternBindExpression (final IOmlPatternBindExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPatternBindExpression


// ***** VDMTOOLS START Name=visitTrapDefinition KEEP=NO
  public void visitTrapDefinition (final IOmlTrapDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTrapDefinition


// ***** VDMTOOLS START Name=visitSelfExpression KEEP=NO
  public void visitSelfExpression (final IOmlSelfExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSelfExpression


// ***** VDMTOOLS START Name=visitRecursiveTrapStatement KEEP=NO
  public void visitRecursiveTrapStatement (final IOmlRecursiveTrapStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getTrapList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getInPart();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRecursiveTrapStatement


// ***** VDMTOOLS START Name=visitOperationDefinition KEEP=NO
  public void visitOperationDefinition (final IOmlOperationDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlOperationShape tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlOperationShape) pcmp.getShape();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationDefinition


// ***** VDMTOOLS START Name=visitWhileLoop KEEP=NO
  public void visitWhileLoop (final IOmlWhileLoop pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitWhileLoop


// ***** VDMTOOLS START Name=visitDefStatement KEEP=NO
  public void visitDefStatement (final IOmlDefStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDefStatement


// ***** VDMTOOLS START Name=visitSeq0Type KEEP=NO
  public void visitSeq0Type (final IOmlSeq0Type pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeq0Type


// ***** VDMTOOLS START Name=visitSetForLoop KEEP=NO
  public void visitSetForLoop (final IOmlSetForLoop pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlStatement tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetForLoop


// ***** VDMTOOLS START Name=visitDefExpression KEEP=NO
  public void visitDefExpression (final IOmlDefExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPatternBindList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDefExpression


// ***** VDMTOOLS START Name=visitDurationStatement KEEP=NO
  public void visitDurationStatement (final IOmlDurationStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDurationExpression();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDurationStatement


// ***** VDMTOOLS START Name=visitImplicitOperation KEEP=NO
  public void visitImplicitOperation (final IOmlImplicitOperation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getPatternTypePairList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getIdentifierTypePairList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlOperationTrailer tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlOperationTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getLine();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getColumn();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    rhs_57 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    popNL();
    String rhs_61 = null;
    String var1_62 = null;
    var1_62 = str.concat(getNL());
    rhs_61 = var1_62.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitImplicitOperation


// ***** VDMTOOLS START Name=visitTypeVariable KEEP=NO
  public void visitTypeVariable (final IOmlTypeVariable pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifier();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeVariable


// ***** VDMTOOLS START Name=visitCompositeType KEEP=NO
  public void visitCompositeType (final IOmlCompositeType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getFieldList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCompositeType


// ***** VDMTOOLS START Name=visitTraceChoiceDefinition KEEP=NO
  public void visitTraceChoiceDefinition (final IOmlTraceChoiceDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getDefs();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceChoiceDefinition


// ***** VDMTOOLS START Name=visitOperationType KEEP=NO
  public void visitOperationType (final IOmlOperationType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationType


// ***** VDMTOOLS START Name=visitBooleanLiteral KEEP=NO
  public void visitBooleanLiteral (final IOmlBooleanLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printBoolField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBooleanLiteral


// ***** VDMTOOLS START Name=visitCasesStatementAlternative KEEP=NO
  public void visitCasesStatementAlternative (final IOmlCasesStatementAlternative pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCasesStatementAlternative


// ***** VDMTOOLS START Name=visitActiveExpression KEEP=NO
  public void visitActiveExpression (final IOmlActiveExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitActiveExpression


// ***** VDMTOOLS START Name=visitForAllExpression KEEP=NO
  public void visitForAllExpression (final IOmlForAllExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getBindList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitForAllExpression


// ***** VDMTOOLS START Name=visitSpecifications KEEP=NO
  public void visitSpecifications (final IOmlSpecifications pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getClassList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSpecifications


// ***** VDMTOOLS START Name=visitCasesExpression KEEP=NO
  public void visitCasesExpression (final IOmlCasesExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getMatchExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getAlternativeList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasOthersExpression();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getOthersExpression();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCasesExpression


// ***** VDMTOOLS START Name=visitIfExpression KEEP=NO
  public void visitIfExpression (final IOmlIfExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getIfExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getThenExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getElseifExpressionList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlExpression tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlExpression) pcmp.getElseExpression();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getLine();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getColumn();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    rhs_57 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    popNL();
    String rhs_61 = null;
    String var1_62 = null;
    var1_62 = str.concat(getNL());
    rhs_61 = var1_62.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIfExpression


// ***** VDMTOOLS START Name=visitValueDefinitions KEEP=NO
  public void visitValueDefinitions (final IOmlValueDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getValueList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueDefinitions


// ***** VDMTOOLS START Name=visitCasesStatement KEEP=NO
  public void visitCasesStatement (final IOmlCasesStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getMatchExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getAlternativeList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasOthersStatement();
    if (cond_28.booleanValue()) {

      IOmlStatement tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlStatement) pcmp.getOthersStatement();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCasesStatement


// ***** VDMTOOLS START Name=visitErrorStatement KEEP=NO
  public void visitErrorStatement (final IOmlErrorStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitErrorStatement


// ***** VDMTOOLS START Name=visitImplicitFunction KEEP=NO
  public void visitImplicitFunction (final IOmlImplicitFunction pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getTypeVariableList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getPatternTypePairList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Vector tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getIdentifierTypePairList();
    printSeqofField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlFunctionTrailer tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlFunctionTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getLine();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    String var1_58 = null;
    String var1_59 = null;
    var1_59 = str.concat(result);
    var1_58 = var1_59.concat(new String(","));
    rhs_57 = var1_58.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    Long tmpArg_v_65 = null;
    tmpArg_v_65 = pcmp.getColumn();
    printNatField(tmpArg_v_65);
    String rhs_66 = null;
    rhs_66 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_66));
    popNL();
    String rhs_70 = null;
    String var1_71 = null;
    var1_71 = str.concat(getNL());
    rhs_70 = var1_71.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_70));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitImplicitFunction


// ***** VDMTOOLS START Name=visitNatType KEEP=NO
  public void visitNatType (final IOmlNatType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNatType


// ***** VDMTOOLS START Name=visitSamebaseclassExpression KEEP=NO
  public void visitSamebaseclassExpression (final IOmlSamebaseclassExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getLhsExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getRhsExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSamebaseclassExpression


// ***** VDMTOOLS START Name=visitComplexType KEEP=NO
  public void visitComplexType (final IOmlComplexType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getFieldList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasInvariant();
    if (cond_28.booleanValue()) {

      IOmlInvariant tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlInvariant) pcmp.getInvariant();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitComplexType


// ***** VDMTOOLS START Name=visitExternals KEEP=NO
  public void visitExternals (final IOmlExternals pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExtList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExternals


// ***** VDMTOOLS START Name=visitSubsequenceExpression KEEP=NO
  public void visitSubsequenceExpression (final IOmlSubsequenceExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getLower();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getUpper();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSubsequenceExpression


// ***** VDMTOOLS START Name=visitElseIfStatement KEEP=NO
  public void visitElseIfStatement (final IOmlElseIfStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitElseIfStatement


// ***** VDMTOOLS START Name=visitGeneralMapType KEEP=NO
  public void visitGeneralMapType (final IOmlGeneralMapType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitGeneralMapType


// ***** VDMTOOLS START Name=visitSpecificationStatement KEEP=NO
  public void visitSpecificationStatement (final IOmlSpecificationStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasExternals();
    if (cond_10.booleanValue()) {

      IOmlExternals tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlExternals) pcmp.getExternals();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean cond_21 = null;
    cond_21 = pcmp.hasPreExpression();
    if (cond_21.booleanValue()) {

      IOmlExpression tmpArg_v_24 = null;
      tmpArg_v_24 = (IOmlExpression) pcmp.getPreExpression();
      printNodeField((IOmlNode) tmpArg_v_24);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_25 = null;
    String var1_26 = null;
    String var1_27 = null;
    var1_27 = str.concat(result);
    var1_26 = var1_27.concat(new String(","));
    rhs_25 = var1_26.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    IOmlExpression tmpArg_v_33 = null;
    tmpArg_v_33 = (IOmlExpression) pcmp.getPostExpression();
    printNodeField((IOmlNode) tmpArg_v_33);
    String rhs_34 = null;
    String var1_35 = null;
    String var1_36 = null;
    var1_36 = str.concat(result);
    var1_35 = var1_36.concat(new String(","));
    rhs_34 = var1_35.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasExceptions();
    if (cond_41.booleanValue()) {

      IOmlExceptions tmpArg_v_44 = null;
      tmpArg_v_44 = (IOmlExceptions) pcmp.getExceptions();
      printNodeField((IOmlNode) tmpArg_v_44);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_45 = null;
    String var1_46 = null;
    String var1_47 = null;
    var1_47 = str.concat(result);
    var1_46 = var1_47.concat(new String(","));
    rhs_45 = var1_46.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_45));
    Long tmpArg_v_53 = null;
    tmpArg_v_53 = pcmp.getLine();
    printNatField(tmpArg_v_53);
    String rhs_54 = null;
    String var1_55 = null;
    String var1_56 = null;
    var1_56 = str.concat(result);
    var1_55 = var1_56.concat(new String(","));
    rhs_54 = var1_55.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    Long tmpArg_v_62 = null;
    tmpArg_v_62 = pcmp.getColumn();
    printNatField(tmpArg_v_62);
    String rhs_63 = null;
    rhs_63 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_63));
    popNL();
    String rhs_67 = null;
    String var1_68 = null;
    var1_68 = str.concat(getNL());
    rhs_67 = var1_68.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_67));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSpecificationStatement


// ***** VDMTOOLS START Name=visitTuplePattern KEEP=NO
  public void visitTuplePattern (final IOmlTuplePattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTuplePattern


// ***** VDMTOOLS START Name=visitTraceBracketedDefinition KEEP=NO
  public void visitTraceBracketedDefinition (final IOmlTraceBracketedDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlTraceDefinition tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlTraceDefinition) pcmp.getDefinition();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceBracketedDefinition


// ***** VDMTOOLS START Name=visitField KEEP=NO
  public void visitField (final IOmlField pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasIdentifier();
    if (cond_10.booleanValue()) {

      String tmpArg_v_13 = null;
      tmpArg_v_13 = pcmp.getIdentifier();
      printStringField(tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    IOmlType tmpArg_v_22 = null;
    tmpArg_v_22 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Boolean tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getIgnore();
    printBoolField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitField


// ***** VDMTOOLS START Name=visitNamedTrace KEEP=NO
  public void visitNamedTrace (final IOmlNamedTrace pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getName();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlTraceDefinition tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlTraceDefinition) pcmp.getDefs();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNamedTrace


// ***** VDMTOOLS START Name=visitTraceSequenceDefinition KEEP=NO
  public void visitTraceSequenceDefinition (final IOmlTraceSequenceDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getDefs();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceSequenceDefinition


// ***** VDMTOOLS START Name=visitTokenType KEEP=NO
  public void visitTokenType (final IOmlTokenType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTokenType


// ***** VDMTOOLS START Name=visitTraceRange KEEP=NO
  public void visitTraceRange (final IOmlTraceRange pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlNumericLiteral tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlNumericLiteral) pcmp.getLower();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasUpper();
    if (cond_19.booleanValue()) {

      IOmlNumericLiteral tmpArg_v_22 = null;
      tmpArg_v_22 = (IOmlNumericLiteral) pcmp.getUpper();
      printNodeField((IOmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Long tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getLine();
    printNatField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getColumn();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    rhs_41 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    popNL();
    String rhs_45 = null;
    String var1_46 = null;
    var1_46 = str.concat(getNL());
    rhs_45 = var1_46.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_45));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceRange


// ***** VDMTOOLS START Name=visitTypeName KEEP=NO
  public void visitTypeName (final IOmlTypeName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlName tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeName


// ***** VDMTOOLS START Name=visitTypeDefinition KEEP=NO
  public void visitTypeDefinition (final IOmlTypeDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlTypeShape tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlTypeShape) pcmp.getShape();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeDefinition


// ***** VDMTOOLS START Name=visitExplicitOperation KEEP=NO
  public void visitExplicitOperation (final IOmlExplicitOperation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getParameterList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlOperationBody tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlOperationBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlOperationTrailer tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlOperationTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getLine();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    String var1_58 = null;
    String var1_59 = null;
    var1_59 = str.concat(result);
    var1_58 = var1_59.concat(new String(","));
    rhs_57 = var1_58.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    Long tmpArg_v_65 = null;
    tmpArg_v_65 = pcmp.getColumn();
    printNatField(tmpArg_v_65);
    String rhs_66 = null;
    rhs_66 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_66));
    popNL();
    String rhs_70 = null;
    String var1_71 = null;
    var1_71 = str.concat(getNL());
    rhs_70 = var1_71.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_70));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExplicitOperation


// ***** VDMTOOLS START Name=visitAssignmentDefinition KEEP=NO
  public void visitAssignmentDefinition (final IOmlAssignmentDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasExpression();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getExpression();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAssignmentDefinition


// ***** VDMTOOLS START Name=visitSameclassExpression KEEP=NO
  public void visitSameclassExpression (final IOmlSameclassExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getLhsExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getRhsExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSameclassExpression


// ***** VDMTOOLS START Name=visitExitStatement KEEP=NO
  public void visitExitStatement (final IOmlExitStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean cond_6 = null;
    cond_6 = pcmp.hasExpression();
    if (cond_6.booleanValue()) {

      IOmlExpression tmpArg_v_9 = null;
      tmpArg_v_9 = (IOmlExpression) pcmp.getExpression();
      printNodeField((IOmlNode) tmpArg_v_9);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_10 = null;
    String var1_11 = null;
    var1_11 = str.concat(result);
    rhs_10 = var1_11.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_10));
    Long tmpArg_v_16 = null;
    tmpArg_v_16 = pcmp.getLine();
    printNatField(tmpArg_v_16);
    String rhs_17 = null;
    String var1_18 = null;
    var1_18 = str.concat(result);
    rhs_17 = var1_18.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    Long tmpArg_v_23 = null;
    tmpArg_v_23 = pcmp.getColumn();
    printNatField(tmpArg_v_23);
    String rhs_24 = null;
    rhs_24 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_24));
    String rhs_27 = null;
    rhs_27 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_27));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExitStatement


// ***** VDMTOOLS START Name=visitExistsExpression KEEP=NO
  public void visitExistsExpression (final IOmlExistsExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getBindList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExistsExpression


// ***** VDMTOOLS START Name=visitParameter KEEP=NO
  public void visitParameter (final IOmlParameter pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitParameter


// ***** VDMTOOLS START Name=visitFunctionTypeInstantiation KEEP=NO
  public void visitFunctionTypeInstantiation (final IOmlFunctionTypeInstantiation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getTypeList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionTypeInstantiation


// ***** VDMTOOLS START Name=visitSequenceEnumeration KEEP=NO
  public void visitSequenceEnumeration (final IOmlSequenceEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSequenceEnumeration


// ***** VDMTOOLS START Name=visitObjectApply KEEP=NO
  public void visitObjectApply (final IOmlObjectApply pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlObjectDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlObjectDesignator) pcmp.getObjectDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitObjectApply


// ***** VDMTOOLS START Name=visitSetUnionPattern KEEP=NO
  public void visitSetUnionPattern (final IOmlSetUnionPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getLhsPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlPattern tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlPattern) pcmp.getRhsPattern();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetUnionPattern


// ***** VDMTOOLS START Name=visitTraceOneOrMore KEEP=NO
  public void visitTraceOneOrMore (final IOmlTraceOneOrMore pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceOneOrMore


// ***** VDMTOOLS START Name=visitStartStatement KEEP=NO
  public void visitStartStatement (final IOmlStartStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitStartStatement


// ***** VDMTOOLS START Name=visitError KEEP=NO
  public void visitError (final IOmlError pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getLhs();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getRhs();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitError


// ***** VDMTOOLS START Name=visitIfStatement KEEP=NO
  public void visitIfStatement (final IOmlIfStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getThenStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getElseifStatement();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Boolean cond_37 = null;
    cond_37 = pcmp.hasElseStatement();
    if (cond_37.booleanValue()) {

      IOmlStatement tmpArg_v_40 = null;
      tmpArg_v_40 = (IOmlStatement) pcmp.getElseStatement();
      printNodeField((IOmlNode) tmpArg_v_40);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getLine();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    String var1_51 = null;
    String var1_52 = null;
    var1_52 = str.concat(result);
    var1_51 = var1_52.concat(new String(","));
    rhs_50 = var1_51.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    Long tmpArg_v_58 = null;
    tmpArg_v_58 = pcmp.getColumn();
    printNatField(tmpArg_v_58);
    String rhs_59 = null;
    rhs_59 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_59));
    popNL();
    String rhs_63 = null;
    String var1_64 = null;
    var1_64 = str.concat(getNL());
    rhs_63 = var1_64.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_63));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIfStatement


// ***** VDMTOOLS START Name=visitLetBeExpression KEEP=NO
  public void visitLetBeExpression (final IOmlLetBeExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasBest();
    if (cond_19.booleanValue()) {

      IOmlExpression tmpArg_v_22 = null;
      tmpArg_v_22 = (IOmlExpression) pcmp.getBest();
      printNodeField((IOmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    IOmlExpression tmpArg_v_31 = null;
    tmpArg_v_31 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLetBeExpression


// ***** VDMTOOLS START Name=visitTotalFunctionType KEEP=NO
  public void visitTotalFunctionType (final IOmlTotalFunctionType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTotalFunctionType


// ***** VDMTOOLS START Name=visitNilLiteral KEEP=NO
  public void visitNilLiteral (final IOmlNilLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNilLiteral


// ***** VDMTOOLS START Name=visitSporadicThread KEEP=NO
  public void visitSporadicThread (final IOmlSporadicThread pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getArgs();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlName tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSporadicThread


// ***** VDMTOOLS START Name=visitMapComprehension KEEP=NO
  public void visitMapComprehension (final IOmlMapComprehension pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlMaplet tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlMaplet) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getBindList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasGuard();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getGuard();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapComprehension


// ***** VDMTOOLS START Name=visitFunctionDefinition KEEP=NO
  public void visitFunctionDefinition (final IOmlFunctionDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlFunctionShape tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlFunctionShape) pcmp.getShape();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionDefinition


// ***** VDMTOOLS START Name=visitRecordConstructor KEEP=NO
  public void visitRecordConstructor (final IOmlRecordConstructor pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRecordConstructor


// ***** VDMTOOLS START Name=visitBoolType KEEP=NO
  public void visitBoolType (final IOmlBoolType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBoolType


// ***** VDMTOOLS START Name=visitSetBind KEEP=NO
  public void visitSetBind (final IOmlSetBind pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPattern();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetBind


// ***** VDMTOOLS START Name=visitNondeterministicStatement KEEP=NO
  public void visitNondeterministicStatement (final IOmlNondeterministicStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getStatementList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNondeterministicStatement


// ***** VDMTOOLS START Name=visitInstanceVariable KEEP=NO
  public void visitInstanceVariable (final IOmlInstanceVariable pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlAssignmentDefinition tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlAssignmentDefinition) pcmp.getAssignmentDefinition();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInstanceVariable


// ***** VDMTOOLS START Name=visitLetExpression KEEP=NO
  public void visitLetExpression (final IOmlLetExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLetExpression


// ***** VDMTOOLS START Name=visitPatternIdentifier KEEP=NO
  public void visitPatternIdentifier (final IOmlPatternIdentifier pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifier();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPatternIdentifier


// ***** VDMTOOLS START Name=visitSymbolicLiteralPattern KEEP=NO
  public void visitSymbolicLiteralPattern (final IOmlSymbolicLiteralPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlLiteral) pcmp.getLiteral();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSymbolicLiteralPattern


// ***** VDMTOOLS START Name=visitTupleConstructor KEEP=NO
  public void visitTupleConstructor (final IOmlTupleConstructor pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTupleConstructor


// ***** VDMTOOLS START Name=visitTraceZeroOrMore KEEP=NO
  public void visitTraceZeroOrMore (final IOmlTraceZeroOrMore pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceZeroOrMore


// ***** VDMTOOLS START Name=visitOptionalType KEEP=NO
  public void visitOptionalType (final IOmlOptionalType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOptionalType


// ***** VDMTOOLS START Name=visitMutexAllPredicate KEEP=NO
  public void visitMutexAllPredicate (final IOmlMutexAllPredicate pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMutexAllPredicate


// ***** VDMTOOLS START Name=visitAccessDefinition KEEP=NO
  public void visitAccessDefinition (final IOmlAccessDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getAsyncAccess();
    printBoolField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getStaticAccess();
    printBoolField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlScope tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlScope) pcmp.getScope();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAccessDefinition


// ***** VDMTOOLS START Name=visitSequenceComprehension KEEP=NO
  public void visitSequenceComprehension (final IOmlSequenceComprehension pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlSetBind tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlSetBind) pcmp.getSetBind();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasGuard();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getGuard();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSequenceComprehension


// ***** VDMTOOLS START Name=visitEqualsDefinition KEEP=NO
  public void visitEqualsDefinition (final IOmlEqualsDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitEqualsDefinition


// ***** VDMTOOLS START Name=visitMaplet KEEP=NO
  public void visitMaplet (final IOmlMaplet pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getDomExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getRngExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMaplet


// ***** VDMTOOLS START Name=visitExistsUniqueExpression KEEP=NO
  public void visitExistsUniqueExpression (final IOmlExistsUniqueExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExistsUniqueExpression


// ***** VDMTOOLS START Name=visitThreadIdExpression KEEP=NO
  public void visitThreadIdExpression (final IOmlThreadIdExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitThreadIdExpression


// ***** VDMTOOLS START Name=visitExtendedExplicitOperation KEEP=NO
  public void visitExtendedExplicitOperation (final IOmlExtendedExplicitOperation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getPatternTypePairList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getIdentifierTypePairList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlOperationBody tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlOperationBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlOperationTrailer tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlOperationTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getLine();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    String var1_58 = null;
    String var1_59 = null;
    var1_59 = str.concat(result);
    var1_58 = var1_59.concat(new String(","));
    rhs_57 = var1_58.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    Long tmpArg_v_65 = null;
    tmpArg_v_65 = pcmp.getColumn();
    printNatField(tmpArg_v_65);
    String rhs_66 = null;
    rhs_66 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_66));
    popNL();
    String rhs_70 = null;
    String var1_71 = null;
    var1_71 = str.concat(getNL());
    rhs_70 = var1_71.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_70));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExtendedExplicitOperation


// ***** VDMTOOLS START Name=visitSetComprehension KEEP=NO
  public void visitSetComprehension (final IOmlSetComprehension pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getBindList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasGuard();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getGuard();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetComprehension


// ***** VDMTOOLS START Name=visitIotaExpression KEEP=NO
  public void visitIotaExpression (final IOmlIotaExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIotaExpression


// ***** VDMTOOLS START Name=visitReturnStatement KEEP=NO
  public void visitReturnStatement (final IOmlReturnStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean cond_6 = null;
    cond_6 = pcmp.hasExpression();
    if (cond_6.booleanValue()) {

      IOmlExpression tmpArg_v_9 = null;
      tmpArg_v_9 = (IOmlExpression) pcmp.getExpression();
      printNodeField((IOmlNode) tmpArg_v_9);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_10 = null;
    String var1_11 = null;
    var1_11 = str.concat(result);
    rhs_10 = var1_11.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_10));
    Long tmpArg_v_16 = null;
    tmpArg_v_16 = pcmp.getLine();
    printNatField(tmpArg_v_16);
    String rhs_17 = null;
    String var1_18 = null;
    var1_18 = str.concat(result);
    rhs_17 = var1_18.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    Long tmpArg_v_23 = null;
    tmpArg_v_23 = pcmp.getColumn();
    printNatField(tmpArg_v_23);
    String rhs_24 = null;
    rhs_24 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_24));
    String rhs_27 = null;
    rhs_27 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_27));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitReturnStatement


// ***** VDMTOOLS START Name=visitTraceZeroOrOne KEEP=NO
  public void visitTraceZeroOrOne (final IOmlTraceZeroOrOne pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceZeroOrOne


// ***** VDMTOOLS START Name=visitSetEnumPattern KEEP=NO
  public void visitSetEnumPattern (final IOmlSetEnumPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetEnumPattern


// ***** VDMTOOLS START Name=visitFunctionDefinitions KEEP=NO
  public void visitFunctionDefinitions (final IOmlFunctionDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getFunctionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionDefinitions


// ***** VDMTOOLS START Name=visitTrapStatement KEEP=NO
  public void visitTrapStatement (final IOmlTrapStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getWithPart();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlStatement tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlStatement) pcmp.getInPart();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTrapStatement


// ***** VDMTOOLS START Name=visitFieldSelect KEEP=NO
  public void visitFieldSelect (final IOmlFieldSelect pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlName tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFieldSelect


// ***** VDMTOOLS START Name=visitFunctionTypeSelect KEEP=NO
  public void visitFunctionTypeSelect (final IOmlFunctionTypeSelect pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlFunctionTypeInstantiation tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlFunctionTypeInstantiation) pcmp.getFunctionTypeInstantiation();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionTypeSelect


// ***** VDMTOOLS START Name=visitSeq1Type KEEP=NO
  public void visitSeq1Type (final IOmlSeq1Type pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeq1Type


// ***** VDMTOOLS START Name=visitOperationBody KEEP=NO
  public void visitOperationBody (final IOmlOperationBody pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasStatement();
    if (cond_10.booleanValue()) {

      IOmlStatement tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlStatement) pcmp.getStatement();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean tmpArg_v_22 = null;
    tmpArg_v_22 = pcmp.getNotYetSpecified();
    printBoolField(tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Boolean tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getSubclassResponsibility();
    printBoolField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationBody


// ***** VDMTOOLS START Name=visitClassTypeInstantiation KEEP=NO
  public void visitClassTypeInstantiation (final IOmlClassTypeInstantiation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getGenericTypes();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClassTypeInstantiation


// ***** VDMTOOLS START Name=visitApplyExpression KEEP=NO
  public void visitApplyExpression (final IOmlApplyExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitApplyExpression


// ***** VDMTOOLS START Name=visitValueShape KEEP=NO
  public void visitValueShape (final IOmlValueShape pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasType();
    if (cond_19.booleanValue()) {

      IOmlType tmpArg_v_22 = null;
      tmpArg_v_22 = (IOmlType) pcmp.getType();
      printNodeField((IOmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    IOmlExpression tmpArg_v_31 = null;
    tmpArg_v_31 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueShape


// ***** VDMTOOLS START Name=visitCyclesStatement KEEP=NO
  public void visitCyclesStatement (final IOmlCyclesStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getCyclesExpression();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCyclesStatement


// ***** VDMTOOLS START Name=visitOperationDefinitions KEEP=NO
  public void visitOperationDefinitions (final IOmlOperationDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getOperationList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationDefinitions


// ***** VDMTOOLS START Name=visitExplicitFunction KEEP=NO
  public void visitExplicitFunction (final IOmlExplicitFunction pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getTypeVariableList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlType tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Vector tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getParameterList();
    printSeqofField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlFunctionBody tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlFunctionBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    IOmlFunctionTrailer tmpArg_v_56 = null;
    tmpArg_v_56 = (IOmlFunctionTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_56);
    String rhs_57 = null;
    String var1_58 = null;
    String var1_59 = null;
    var1_59 = str.concat(result);
    var1_58 = var1_59.concat(new String(","));
    rhs_57 = var1_58.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    Long tmpArg_v_65 = null;
    tmpArg_v_65 = pcmp.getLine();
    printNatField(tmpArg_v_65);
    String rhs_66 = null;
    String var1_67 = null;
    String var1_68 = null;
    var1_68 = str.concat(result);
    var1_67 = var1_68.concat(new String(","));
    rhs_66 = var1_67.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_66));
    Long tmpArg_v_74 = null;
    tmpArg_v_74 = pcmp.getColumn();
    printNatField(tmpArg_v_74);
    String rhs_75 = null;
    rhs_75 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_75));
    popNL();
    String rhs_79 = null;
    String var1_80 = null;
    var1_80 = str.concat(getNL());
    rhs_79 = var1_80.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_79));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExplicitFunction


// ***** VDMTOOLS START Name=visitPreconditionExpression KEEP=NO
  public void visitPreconditionExpression (final IOmlPreconditionExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPreconditionExpression


// ***** VDMTOOLS START Name=visitTraceLetBeBinding KEEP=NO
  public void visitTraceLetBeBinding (final IOmlTraceLetBeBinding pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasBest();
    if (cond_19.booleanValue()) {

      IOmlExpression tmpArg_v_22 = null;
      tmpArg_v_22 = (IOmlExpression) pcmp.getBest();
      printNodeField((IOmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Long tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getLine();
    printNatField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getColumn();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    rhs_41 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    popNL();
    String rhs_45 = null;
    String var1_46 = null;
    var1_46 = str.concat(getNL());
    rhs_45 = var1_46.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_45));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceLetBeBinding


// ***** VDMTOOLS START Name=visitQuoteLiteral KEEP=NO
  public void visitQuoteLiteral (final IOmlQuoteLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitQuoteLiteral


// ***** VDMTOOLS START Name=visitVarInformation KEEP=NO
  public void visitVarInformation (final IOmlVarInformation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlMode tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlMode) pcmp.getMode();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getNameList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasType();
    if (cond_28.booleanValue()) {

      IOmlType tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlType) pcmp.getType();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitVarInformation


// ***** VDMTOOLS START Name=visitIsofbaseclassExpression KEEP=NO
  public void visitIsofbaseclassExpression (final IOmlIsofbaseclassExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIsofbaseclassExpression


// ***** VDMTOOLS START Name=visitLetStatement KEEP=NO
  public void visitLetStatement (final IOmlLetStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLetStatement


// ***** VDMTOOLS START Name=visitActExpression KEEP=NO
  public void visitActExpression (final IOmlActExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitActExpression


// ***** VDMTOOLS START Name=visitExceptions KEEP=NO
  public void visitExceptions (final IOmlExceptions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getErrorList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExceptions


// ***** VDMTOOLS START Name=visitIsExpression KEEP=NO
  public void visitIsExpression (final IOmlIsExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIsExpression


// ***** VDMTOOLS START Name=visitTraceDefinitions KEEP=NO
  public void visitTraceDefinitions (final IOmlTraceDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getTraces();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceDefinitions


// ***** VDMTOOLS START Name=visitValueDefinition KEEP=NO
  public void visitValueDefinition (final IOmlValueDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlValueShape tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlValueShape) pcmp.getShape();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueDefinition


// ***** VDMTOOLS START Name=visitCasesExpressionAlternative KEEP=NO
  public void visitCasesExpressionAlternative (final IOmlCasesExpressionAlternative pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCasesExpressionAlternative


// ***** VDMTOOLS START Name=visitLetBeStatement KEEP=NO
  public void visitLetBeStatement (final IOmlLetBeStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasBest();
    if (cond_19.booleanValue()) {

      IOmlExpression tmpArg_v_22 = null;
      tmpArg_v_22 = (IOmlExpression) pcmp.getBest();
      printNodeField((IOmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    IOmlStatement tmpArg_v_31 = null;
    tmpArg_v_31 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLetBeStatement


// ***** VDMTOOLS START Name=visitMutexPredicate KEEP=NO
  public void visitMutexPredicate (final IOmlMutexPredicate pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMutexPredicate


// ***** VDMTOOLS START Name=visitUndefinedExpression KEEP=NO
  public void visitUndefinedExpression (final IOmlUndefinedExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUndefinedExpression


// ***** VDMTOOLS START Name=visitSetEnumeration KEEP=NO
  public void visitSetEnumeration (final IOmlSetEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetEnumeration


// ***** VDMTOOLS START Name=visitCharacterLiteral KEEP=NO
  public void visitCharacterLiteral (final IOmlCharacterLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Character tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printCharField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCharacterLiteral


// ***** VDMTOOLS START Name=visitAssignStatement KEEP=NO
  public void visitAssignStatement (final IOmlAssignStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlStateDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlStateDesignator) pcmp.getStateDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAssignStatement


// ***** VDMTOOLS START Name=visitProductType KEEP=NO
  public void visitProductType (final IOmlProductType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getLhsType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRhsType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitProductType


// ***** VDMTOOLS START Name=visitSequenceForLoop KEEP=NO
  public void visitSequenceForLoop (final IOmlSequenceForLoop pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getInReverse();
    printBoolField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlStatement tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getLine();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getColumn();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    rhs_57 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    popNL();
    String rhs_61 = null;
    String var1_62 = null;
    var1_62 = str.concat(getNL());
    rhs_61 = var1_62.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSequenceForLoop


// ***** VDMTOOLS START Name=visitInstanceVariableDefinitions KEEP=NO
  public void visitInstanceVariableDefinitions (final IOmlInstanceVariableDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVariablesList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInstanceVariableDefinitions


// ***** VDMTOOLS START Name=visitRealType KEEP=NO
  public void visitRealType (final IOmlRealType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRealType


// ***** VDMTOOLS START Name=visitCharType KEEP=NO
  public void visitCharType (final IOmlCharType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCharType


// ***** VDMTOOLS START Name=visitTraceMethodApply KEEP=NO
  public void visitTraceMethodApply (final IOmlTraceMethodApply pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getVariableName();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    String tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getMethodName();
    printStringField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getArgs();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceMethodApply


// ***** VDMTOOLS START Name=visitWaitingExpression KEEP=NO
  public void visitWaitingExpression (final IOmlWaitingExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitWaitingExpression


// ***** VDMTOOLS START Name=visitInvariant KEEP=NO
  public void visitInvariant (final IOmlInvariant pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInvariant


// ***** VDMTOOLS START Name=visitObjectFieldReference KEEP=NO
  public void visitObjectFieldReference (final IOmlObjectFieldReference pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlObjectDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlObjectDesignator) pcmp.getObjectDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlName tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitObjectFieldReference


// ***** VDMTOOLS START Name=visitEmptyType KEEP=NO
  public void visitEmptyType (final IOmlEmptyType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitEmptyType


// ***** VDMTOOLS START Name=visitBracketedType KEEP=NO
  public void visitBracketedType (final IOmlBracketedType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBracketedType


// ***** VDMTOOLS START Name=visitFinExpression KEEP=NO
  public void visitFinExpression (final IOmlFinExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFinExpression


// ***** VDMTOOLS START Name=visitSetRangeExpression KEEP=NO
  public void visitSetRangeExpression (final IOmlSetRangeExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getLower();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getUpper();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetRangeExpression


// ***** VDMTOOLS START Name=visitSimpleType KEEP=NO
  public void visitSimpleType (final IOmlSimpleType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasInvariant();
    if (cond_28.booleanValue()) {

      IOmlInvariant tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlInvariant) pcmp.getInvariant();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSimpleType


// ***** VDMTOOLS START Name=visitTokenExpression KEEP=NO
  public void visitTokenExpression (final IOmlTokenExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTokenExpression


// ***** VDMTOOLS START Name=visitBracketedExpression KEEP=NO
  public void visitBracketedExpression (final IOmlBracketedExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBracketedExpression


// ***** VDMTOOLS START Name=visitFunctionBody KEEP=NO
  public void visitFunctionBody (final IOmlFunctionBody pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasFunctionBody();
    if (cond_10.booleanValue()) {

      IOmlExpression tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlExpression) pcmp.getFunctionBody();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean tmpArg_v_22 = null;
    tmpArg_v_22 = pcmp.getNotYetSpecified();
    printBoolField(tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Boolean tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getSubclassResponsibility();
    printBoolField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionBody


// ***** VDMTOOLS START Name=visitLambdaExpression KEEP=NO
  public void visitLambdaExpression (final IOmlLambdaExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getTypeBindList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLambdaExpression


// ***** VDMTOOLS START Name=visitInstanceVariableInvariant KEEP=NO
  public void visitInstanceVariableInvariant (final IOmlInstanceVariableInvariant pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getInvariant();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInstanceVariableInvariant


// ***** VDMTOOLS START Name=visitPartialFunctionType KEEP=NO
  public void visitPartialFunctionType (final IOmlPartialFunctionType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPartialFunctionType


// ***** VDMTOOLS START Name=visitInheritanceClause KEEP=NO
  public void visitInheritanceClause (final IOmlInheritanceClause pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifierList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInheritanceClause


// ***** VDMTOOLS START Name=visitDontCarePattern KEEP=NO
  public void visitDontCarePattern (final IOmlDontCarePattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDontCarePattern


// ***** VDMTOOLS START Name=visitSeqEnumPattern KEEP=NO
  public void visitSeqEnumPattern (final IOmlSeqEnumPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeqEnumPattern


// ***** VDMTOOLS START Name=visitUnionType KEEP=NO
  public void visitUnionType (final IOmlUnionType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getLhsType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRhsType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUnionType


// ***** VDMTOOLS START Name=visitTraceDefinitionItem KEEP=NO
  public void visitTraceDefinitionItem (final IOmlTraceDefinitionItem pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getBind();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlTraceCoreDefinition tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlTraceCoreDefinition) pcmp.getTest();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasRegexpr();
    if (cond_28.booleanValue()) {

      IOmlTraceRepeatPattern tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlTraceRepeatPattern) pcmp.getRegexpr();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTraceDefinitionItem


// ***** VDMTOOLS START Name=visitTypelessExplicitFunction KEEP=NO
  public void visitTypelessExplicitFunction (final IOmlTypelessExplicitFunction pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getParameterList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlFunctionBody tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlFunctionBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlFunctionTrailer tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlFunctionTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getLine();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getColumn();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    rhs_57 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    popNL();
    String rhs_61 = null;
    String var1_62 = null;
    var1_62 = str.concat(getNL());
    rhs_61 = var1_62.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypelessExplicitFunction


// ***** VDMTOOLS START Name=visitThreadDefinition KEEP=NO
  public void visitThreadDefinition (final IOmlThreadDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean cond_6 = null;
    cond_6 = pcmp.hasThreadSpecification();
    if (cond_6.booleanValue()) {

      IOmlThreadSpecification tmpArg_v_9 = null;
      tmpArg_v_9 = (IOmlThreadSpecification) pcmp.getThreadSpecification();
      printNodeField((IOmlNode) tmpArg_v_9);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_10 = null;
    String var1_11 = null;
    var1_11 = str.concat(result);
    rhs_10 = var1_11.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_10));
    Long tmpArg_v_16 = null;
    tmpArg_v_16 = pcmp.getLine();
    printNatField(tmpArg_v_16);
    String rhs_17 = null;
    String var1_18 = null;
    var1_18 = str.concat(result);
    rhs_17 = var1_18.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    Long tmpArg_v_23 = null;
    tmpArg_v_23 = pcmp.getColumn();
    printNatField(tmpArg_v_23);
    String rhs_24 = null;
    rhs_24 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_24));
    String rhs_27 = null;
    rhs_27 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_27));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitThreadDefinition


// ***** VDMTOOLS START Name=visitAlwaysStatement KEEP=NO
  public void visitAlwaysStatement (final IOmlAlwaysStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlStatement tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlStatement) pcmp.getAlwaysPart();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getInPart();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAlwaysStatement


// ***** VDMTOOLS START Name=visitRecordPattern KEEP=NO
  public void visitRecordPattern (final IOmlRecordPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRecordPattern


// ***** VDMTOOLS START Name=visitQuoteType KEEP=NO
  public void visitQuoteType (final IOmlQuoteType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlQuoteLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlQuoteLiteral) pcmp.getQuoteLiteral();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitQuoteType


// ***** VDMTOOLS START Name=visitDclStatement KEEP=NO
  public void visitDclStatement (final IOmlDclStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDclStatement


// ***** VDMTOOLS START Name=visitBinaryExpression KEEP=NO
  public void visitBinaryExpression (final IOmlBinaryExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getLhsExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlBinaryOperator tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlBinaryOperator) pcmp.getOperator();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getRhsExpression();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBinaryExpression


// ***** VDMTOOLS START Name=visitPatternTypePair KEEP=NO
  public void visitPatternTypePair (final IOmlPatternTypePair pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPatternTypePair


// ***** VDMTOOLS START Name=visitMapOrSequenceReference KEEP=NO
  public void visitMapOrSequenceReference (final IOmlMapOrSequenceReference pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlStateDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlStateDesignator) pcmp.getStateDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapOrSequenceReference


// ***** VDMTOOLS START Name=visitElseIfExpression KEEP=NO
  public void visitElseIfExpression (final IOmlElseIfExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getElseifExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getThenExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitElseIfExpression


// ***** VDMTOOLS START Name=visitName KEEP=NO
  public void visitName (final IOmlName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasClassIdentifier();
    if (cond_10.booleanValue()) {

      String tmpArg_v_13 = null;
      tmpArg_v_13 = pcmp.getClassIdentifier();
      printStringField(tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    String tmpArg_v_22 = null;
    tmpArg_v_22 = pcmp.getIdentifier();
    printStringField(tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Long tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getLine();
    printNatField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getColumn();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    rhs_41 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    popNL();
    String rhs_45 = null;
    String var1_46 = null;
    var1_46 = str.concat(getNL());
    rhs_45 = var1_46.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_45));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitName


// ***** VDMTOOLS START Name=visitNat1Type KEEP=NO
  public void visitNat1Type (final IOmlNat1Type pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNat1Type


// ***** VDMTOOLS START Name=visitSynchronizationDefinitions KEEP=NO
  public void visitSynchronizationDefinitions (final IOmlSynchronizationDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getSyncList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSynchronizationDefinitions


// ***** VDMTOOLS START Name=visitMuExpression KEEP=NO
  public void visitMuExpression (final IOmlMuExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getModifierList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMuExpression


// ***** VDMTOOLS START Name=visitFunctionTrailer KEEP=NO
  public void visitFunctionTrailer (final IOmlFunctionTrailer pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasPreExpression();
    if (cond_10.booleanValue()) {

      IOmlExpression tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlExpression) pcmp.getPreExpression();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean cond_21 = null;
    cond_21 = pcmp.hasPostExpression();
    if (cond_21.booleanValue()) {

      IOmlExpression tmpArg_v_24 = null;
      tmpArg_v_24 = (IOmlExpression) pcmp.getPostExpression();
      printNodeField((IOmlNode) tmpArg_v_24);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_25 = null;
    String var1_26 = null;
    String var1_27 = null;
    var1_27 = str.concat(result);
    var1_26 = var1_27.concat(new String(","));
    rhs_25 = var1_26.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Long tmpArg_v_33 = null;
    tmpArg_v_33 = pcmp.getLine();
    printNatField(tmpArg_v_33);
    String rhs_34 = null;
    String var1_35 = null;
    String var1_36 = null;
    var1_36 = str.concat(result);
    var1_35 = var1_36.concat(new String(","));
    rhs_34 = var1_35.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Long tmpArg_v_42 = null;
    tmpArg_v_42 = pcmp.getColumn();
    printNatField(tmpArg_v_42);
    String rhs_43 = null;
    rhs_43 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    popNL();
    String rhs_47 = null;
    String var1_48 = null;
    var1_48 = str.concat(getNL());
    rhs_47 = var1_48.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_47));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionTrailer


// ***** VDMTOOLS START Name=visitTimeExpression KEEP=NO
  public void visitTimeExpression (final IOmlTimeExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTimeExpression


// ***** VDMTOOLS START Name=visitRatType KEEP=NO
  public void visitRatType (final IOmlRatType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRatType


// ***** VDMTOOLS START Name=visitStateDesignatorName KEEP=NO
  public void visitStateDesignatorName (final IOmlStateDesignatorName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlName tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitStateDesignatorName


// ***** VDMTOOLS START Name=visitExtendedExplicitFunction KEEP=NO
  public void visitExtendedExplicitFunction (final IOmlExtendedExplicitFunction pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getTypeVariableList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getPatternTypePairList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Vector tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getIdentifierTypePairList();
    printSeqofField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlFunctionBody tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlFunctionBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    IOmlFunctionTrailer tmpArg_v_56 = null;
    tmpArg_v_56 = (IOmlFunctionTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_56);
    String rhs_57 = null;
    String var1_58 = null;
    String var1_59 = null;
    var1_59 = str.concat(result);
    var1_58 = var1_59.concat(new String(","));
    rhs_57 = var1_58.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    Long tmpArg_v_65 = null;
    tmpArg_v_65 = pcmp.getLine();
    printNatField(tmpArg_v_65);
    String rhs_66 = null;
    String var1_67 = null;
    String var1_68 = null;
    var1_68 = str.concat(result);
    var1_67 = var1_68.concat(new String(","));
    rhs_66 = var1_67.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_66));
    Long tmpArg_v_74 = null;
    tmpArg_v_74 = pcmp.getColumn();
    printNatField(tmpArg_v_74);
    String rhs_75 = null;
    rhs_75 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_75));
    popNL();
    String rhs_79 = null;
    String var1_80 = null;
    var1_80 = str.concat(getNL());
    rhs_79 = var1_80.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_79));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExtendedExplicitFunction


// ***** VDMTOOLS START Name=visitLiteral KEEP=NO
  public void visitLiteral (final IOmlLiteral pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitLiteral


// ***** VDMTOOLS START Name=visitTraceDefinition KEEP=NO
  public void visitTraceDefinition (final IOmlTraceDefinition pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitTraceDefinition


// ***** VDMTOOLS START Name=visitType KEEP=NO
  public void visitType (final IOmlType pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitType


// ***** VDMTOOLS START Name=visitStatement KEEP=NO
  public void visitStatement (final IOmlStatement pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitStatement


// ***** VDMTOOLS START Name=visitThreadSpecification KEEP=NO
  public void visitThreadSpecification (final IOmlThreadSpecification pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitThreadSpecification


// ***** VDMTOOLS START Name=visitDefinitionBlock KEEP=NO
  public void visitDefinitionBlock (final IOmlDefinitionBlock pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitDefinitionBlock


// ***** VDMTOOLS START Name=visitPatternBind KEEP=NO
  public void visitPatternBind (final IOmlPatternBind pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitPatternBind


// ***** VDMTOOLS START Name=visitMode KEEP=NO
  public void visitMode (final IOmlMode pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMode


// ***** VDMTOOLS START Name=visitBind KEEP=NO
  public void visitBind (final IOmlBind pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitBind


// ***** VDMTOOLS START Name=visitOperationShape KEEP=NO
  public void visitOperationShape (final IOmlOperationShape pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitOperationShape


// ***** VDMTOOLS START Name=visitTraceCoreDefinition KEEP=NO
  public void visitTraceCoreDefinition (final IOmlTraceCoreDefinition pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitTraceCoreDefinition


// ***** VDMTOOLS START Name=visitTraceRepeatPattern KEEP=NO
  public void visitTraceRepeatPattern (final IOmlTraceRepeatPattern pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitTraceRepeatPattern


// ***** VDMTOOLS START Name=visitFunctionShape KEEP=NO
  public void visitFunctionShape (final IOmlFunctionShape pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitFunctionShape


// ***** VDMTOOLS START Name=visitBinaryOperator KEEP=NO
  public void visitBinaryOperator (final IOmlBinaryOperator pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBinaryOperator


// ***** VDMTOOLS START Name=visitStateDesignator KEEP=NO
  public void visitStateDesignator (final IOmlStateDesignator pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitStateDesignator


// ***** VDMTOOLS START Name=visitUnaryOperator KEEP=NO
  public void visitUnaryOperator (final IOmlUnaryOperator pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUnaryOperator


// ***** VDMTOOLS START Name=visitInstanceVariableShape KEEP=NO
  public void visitInstanceVariableShape (final IOmlInstanceVariableShape pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitInstanceVariableShape


// ***** VDMTOOLS START Name=visitPattern KEEP=NO
  public void visitPattern (final IOmlPattern pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitPattern


// ***** VDMTOOLS START Name=visitExpression KEEP=NO
  public void visitExpression (final IOmlExpression pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitExpression


// ***** VDMTOOLS START Name=visitObjectDesignator KEEP=NO
  public void visitObjectDesignator (final IOmlObjectDesignator pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitObjectDesignator


// ***** VDMTOOLS START Name=visitTraceBinding KEEP=NO
  public void visitTraceBinding (final IOmlTraceBinding pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitTraceBinding


// ***** VDMTOOLS START Name=visitTypeShape KEEP=NO
  public void visitTypeShape (final IOmlTypeShape pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitTypeShape


// ***** VDMTOOLS START Name=visitSyncPredicate KEEP=NO
  public void visitSyncPredicate (final IOmlSyncPredicate pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitSyncPredicate


// ***** VDMTOOLS START Name=visitScope KEEP=NO
  public void visitScope (final IOmlScope pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitScope

}
;
