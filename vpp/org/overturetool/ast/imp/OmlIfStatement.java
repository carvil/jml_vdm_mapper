//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class OmlIfStatement extends OmlStatement implements IOmlIfStatement {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivExpression KEEP=NO
  private IOmlExpression ivExpression = null;
// ***** VDMTOOLS END Name=ivExpression

// ***** VDMTOOLS START Name=ivThenStatement KEEP=NO
  private IOmlStatement ivThenStatement = null;
// ***** VDMTOOLS END Name=ivThenStatement

// ***** VDMTOOLS START Name=ivElseifStatement KEEP=NO
  private Vector ivElseifStatement = null;
// ***** VDMTOOLS END Name=ivElseifStatement

// ***** VDMTOOLS START Name=ivElseStatement KEEP=NO
  private IOmlStatement ivElseStatement = null;
// ***** VDMTOOLS END Name=ivElseStatement


// ***** VDMTOOLS START Name=OmlIfStatement KEEP=NO
  public OmlIfStatement () throws CGException {
    try {

      ivExpression = null;
      ivThenStatement = null;
      ivElseifStatement = new Vector();
      ivElseStatement = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=OmlIfStatement


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("IfStatement");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitIfStatement((IOmlIfStatement) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=OmlIfStatement KEEP=NO
  public OmlIfStatement (final IOmlExpression p1, final IOmlStatement p2, final Vector p3, final IOmlStatement p4) throws CGException {

    try {

      ivExpression = null;
      ivThenStatement = null;
      ivElseifStatement = new Vector();
      ivElseStatement = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setExpression((IOmlExpression) p1);
      setThenStatement((IOmlStatement) p2);
      setElseifStatement(p3);
      setElseStatement((IOmlStatement) p4);
    }
  }
// ***** VDMTOOLS END Name=OmlIfStatement


// ***** VDMTOOLS START Name=OmlIfStatement KEEP=NO
  public OmlIfStatement (final IOmlExpression p1, final IOmlStatement p2, final Vector p3, final IOmlStatement p4, final Long line, final Long column) throws CGException {

    try {

      ivExpression = null;
      ivThenStatement = null;
      ivElseifStatement = new Vector();
      ivElseStatement = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setExpression((IOmlExpression) p1);
      setThenStatement((IOmlStatement) p2);
      setElseifStatement(p3);
      setElseStatement((IOmlStatement) p4);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=OmlIfStatement


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("expression");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setExpression((IOmlExpression) data.get(fname));
    }
    {

      String fname = new String("then_statement");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setThenStatement((IOmlStatement) data.get(fname));
    }
    {

      String fname = new String("elseif_statement");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setElseifStatement((Vector) data.get(fname));
    }
    {

      String fname = new String("else_statement");
      Boolean cond_31 = null;
      cond_31 = new Boolean(data.containsKey(fname));
      if (cond_31.booleanValue()) 
        setElseStatement((IOmlStatement) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getExpression KEEP=NO
  public IOmlExpression getExpression () throws CGException {
    return (IOmlExpression) ivExpression;
  }
// ***** VDMTOOLS END Name=getExpression


// ***** VDMTOOLS START Name=setExpression KEEP=NO
  public void setExpression (final IOmlExpression parg) throws CGException {
    ivExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setExpression


// ***** VDMTOOLS START Name=getThenStatement KEEP=NO
  public IOmlStatement getThenStatement () throws CGException {
    return (IOmlStatement) ivThenStatement;
  }
// ***** VDMTOOLS END Name=getThenStatement


// ***** VDMTOOLS START Name=setThenStatement KEEP=NO
  public void setThenStatement (final IOmlStatement parg) throws CGException {
    ivThenStatement = (IOmlStatement) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setThenStatement


// ***** VDMTOOLS START Name=getElseifStatement KEEP=NO
  public Vector getElseifStatement () throws CGException {
    return ivElseifStatement;
  }
// ***** VDMTOOLS END Name=getElseifStatement


// ***** VDMTOOLS START Name=setElseifStatement KEEP=NO
  public void setElseifStatement (final Vector parg) throws CGException {
    ivElseifStatement = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setElseifStatement


// ***** VDMTOOLS START Name=addElseifStatement KEEP=NO
  public void addElseifStatement (final IOmlNode parg) throws CGException {
    ivElseifStatement.add(parg);
  }
// ***** VDMTOOLS END Name=addElseifStatement


// ***** VDMTOOLS START Name=getElseStatement KEEP=NO
  public IOmlStatement getElseStatement () throws CGException {
    return (IOmlStatement) ivElseStatement;
  }
// ***** VDMTOOLS END Name=getElseStatement


// ***** VDMTOOLS START Name=hasElseStatement KEEP=NO
  public Boolean hasElseStatement () throws CGException {
    return new Boolean(!UTIL.equals(ivElseStatement, null));
  }
// ***** VDMTOOLS END Name=hasElseStatement


// ***** VDMTOOLS START Name=setElseStatement KEEP=NO
  public void setElseStatement (final IOmlStatement parg) throws CGException {
    ivElseStatement = (IOmlStatement) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setElseStatement

}
;
