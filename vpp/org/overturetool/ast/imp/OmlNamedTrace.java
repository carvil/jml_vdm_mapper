//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class OmlNamedTrace extends OmlNode implements IOmlNamedTrace {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivName KEEP=NO
  private String ivName = null;
// ***** VDMTOOLS END Name=ivName

// ***** VDMTOOLS START Name=ivDefs KEEP=NO
  private IOmlTraceDefinition ivDefs = null;
// ***** VDMTOOLS END Name=ivDefs


// ***** VDMTOOLS START Name=OmlNamedTrace KEEP=NO
  public OmlNamedTrace () throws CGException {
    try {

      ivName = UTIL.ConvertToString(new String());
      ivDefs = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=OmlNamedTrace


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("NamedTrace");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitNamedTrace((IOmlNamedTrace) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=OmlNamedTrace KEEP=NO
  public OmlNamedTrace (final String p1, final IOmlTraceDefinition p2) throws CGException {

    try {

      ivName = UTIL.ConvertToString(new String());
      ivDefs = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setName(p1);
      setDefs((IOmlTraceDefinition) p2);
    }
  }
// ***** VDMTOOLS END Name=OmlNamedTrace


// ***** VDMTOOLS START Name=OmlNamedTrace KEEP=NO
  public OmlNamedTrace (final String p1, final IOmlTraceDefinition p2, final Long line, final Long column) throws CGException {

    try {

      ivName = UTIL.ConvertToString(new String());
      ivDefs = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setName(p1);
      setDefs((IOmlTraceDefinition) p2);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=OmlNamedTrace


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("name");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setName(UTIL.ConvertToString(data.get(fname)));
    }
    {

      String fname = new String("defs");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setDefs((IOmlTraceDefinition) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getName KEEP=NO
  public String getName () throws CGException {
    return ivName;
  }
// ***** VDMTOOLS END Name=getName


// ***** VDMTOOLS START Name=setName KEEP=NO
  public void setName (final String parg) throws CGException {
    ivName = UTIL.ConvertToString(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setName


// ***** VDMTOOLS START Name=getDefs KEEP=NO
  public IOmlTraceDefinition getDefs () throws CGException {
    return (IOmlTraceDefinition) ivDefs;
  }
// ***** VDMTOOLS END Name=getDefs


// ***** VDMTOOLS START Name=setDefs KEEP=NO
  public void setDefs (final IOmlTraceDefinition parg) throws CGException {
    ivDefs = (IOmlTraceDefinition) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setDefs

}
;
