//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class OmlDurationStatement extends OmlStatement implements IOmlDurationStatement {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivDurationExpression KEEP=NO
  private Vector ivDurationExpression = null;
// ***** VDMTOOLS END Name=ivDurationExpression

// ***** VDMTOOLS START Name=ivStatement KEEP=NO
  private IOmlStatement ivStatement = null;
// ***** VDMTOOLS END Name=ivStatement


// ***** VDMTOOLS START Name=OmlDurationStatement KEEP=NO
  public OmlDurationStatement () throws CGException {
    try {

      ivDurationExpression = new Vector();
      ivStatement = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=OmlDurationStatement


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("DurationStatement");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitDurationStatement((IOmlDurationStatement) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=OmlDurationStatement KEEP=NO
  public OmlDurationStatement (final Vector p1, final IOmlStatement p2) throws CGException {

    try {

      ivDurationExpression = new Vector();
      ivStatement = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setDurationExpression(p1);
      setStatement((IOmlStatement) p2);
    }
  }
// ***** VDMTOOLS END Name=OmlDurationStatement


// ***** VDMTOOLS START Name=OmlDurationStatement KEEP=NO
  public OmlDurationStatement (final Vector p1, final IOmlStatement p2, final Long line, final Long column) throws CGException {

    try {

      ivDurationExpression = new Vector();
      ivStatement = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setDurationExpression(p1);
      setStatement((IOmlStatement) p2);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=OmlDurationStatement


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("duration_expression");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setDurationExpression((Vector) data.get(fname));
    }
    {

      String fname = new String("statement");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setStatement((IOmlStatement) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getDurationExpression KEEP=NO
  public Vector getDurationExpression () throws CGException {
    return ivDurationExpression;
  }
// ***** VDMTOOLS END Name=getDurationExpression


// ***** VDMTOOLS START Name=setDurationExpression KEEP=NO
  public void setDurationExpression (final Vector parg) throws CGException {
    ivDurationExpression = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setDurationExpression


// ***** VDMTOOLS START Name=addDurationExpression KEEP=NO
  public void addDurationExpression (final IOmlNode parg) throws CGException {
    ivDurationExpression.add(parg);
  }
// ***** VDMTOOLS END Name=addDurationExpression


// ***** VDMTOOLS START Name=getStatement KEEP=NO
  public IOmlStatement getStatement () throws CGException {
    return (IOmlStatement) ivStatement;
  }
// ***** VDMTOOLS END Name=getStatement


// ***** VDMTOOLS START Name=setStatement KEEP=NO
  public void setStatement (final IOmlStatement parg) throws CGException {
    ivStatement = (IOmlStatement) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setStatement

}
;
