//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class OmlIfExpression extends OmlExpression implements IOmlIfExpression {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivIfExpression KEEP=NO
  private IOmlExpression ivIfExpression = null;
// ***** VDMTOOLS END Name=ivIfExpression

// ***** VDMTOOLS START Name=ivThenExpression KEEP=NO
  private IOmlExpression ivThenExpression = null;
// ***** VDMTOOLS END Name=ivThenExpression

// ***** VDMTOOLS START Name=ivElseifExpressionList KEEP=NO
  private Vector ivElseifExpressionList = null;
// ***** VDMTOOLS END Name=ivElseifExpressionList

// ***** VDMTOOLS START Name=ivElseExpression KEEP=NO
  private IOmlExpression ivElseExpression = null;
// ***** VDMTOOLS END Name=ivElseExpression


// ***** VDMTOOLS START Name=OmlIfExpression KEEP=NO
  public OmlIfExpression () throws CGException {
    try {

      ivIfExpression = null;
      ivThenExpression = null;
      ivElseifExpressionList = new Vector();
      ivElseExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=OmlIfExpression


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("IfExpression");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitIfExpression((IOmlIfExpression) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=OmlIfExpression KEEP=NO
  public OmlIfExpression (final IOmlExpression p1, final IOmlExpression p2, final Vector p3, final IOmlExpression p4) throws CGException {

    try {

      ivIfExpression = null;
      ivThenExpression = null;
      ivElseifExpressionList = new Vector();
      ivElseExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setIfExpression((IOmlExpression) p1);
      setThenExpression((IOmlExpression) p2);
      setElseifExpressionList(p3);
      setElseExpression((IOmlExpression) p4);
    }
  }
// ***** VDMTOOLS END Name=OmlIfExpression


// ***** VDMTOOLS START Name=OmlIfExpression KEEP=NO
  public OmlIfExpression (final IOmlExpression p1, final IOmlExpression p2, final Vector p3, final IOmlExpression p4, final Long line, final Long column) throws CGException {

    try {

      ivIfExpression = null;
      ivThenExpression = null;
      ivElseifExpressionList = new Vector();
      ivElseExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setIfExpression((IOmlExpression) p1);
      setThenExpression((IOmlExpression) p2);
      setElseifExpressionList(p3);
      setElseExpression((IOmlExpression) p4);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=OmlIfExpression


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("if_expression");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setIfExpression((IOmlExpression) data.get(fname));
    }
    {

      String fname = new String("then_expression");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setThenExpression((IOmlExpression) data.get(fname));
    }
    {

      String fname = new String("elseif_expression_list");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setElseifExpressionList((Vector) data.get(fname));
    }
    {

      String fname = new String("else_expression");
      Boolean cond_31 = null;
      cond_31 = new Boolean(data.containsKey(fname));
      if (cond_31.booleanValue()) 
        setElseExpression((IOmlExpression) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getIfExpression KEEP=NO
  public IOmlExpression getIfExpression () throws CGException {
    return (IOmlExpression) ivIfExpression;
  }
// ***** VDMTOOLS END Name=getIfExpression


// ***** VDMTOOLS START Name=setIfExpression KEEP=NO
  public void setIfExpression (final IOmlExpression parg) throws CGException {
    ivIfExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setIfExpression


// ***** VDMTOOLS START Name=getThenExpression KEEP=NO
  public IOmlExpression getThenExpression () throws CGException {
    return (IOmlExpression) ivThenExpression;
  }
// ***** VDMTOOLS END Name=getThenExpression


// ***** VDMTOOLS START Name=setThenExpression KEEP=NO
  public void setThenExpression (final IOmlExpression parg) throws CGException {
    ivThenExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setThenExpression


// ***** VDMTOOLS START Name=getElseifExpressionList KEEP=NO
  public Vector getElseifExpressionList () throws CGException {
    return ivElseifExpressionList;
  }
// ***** VDMTOOLS END Name=getElseifExpressionList


// ***** VDMTOOLS START Name=setElseifExpressionList KEEP=NO
  public void setElseifExpressionList (final Vector parg) throws CGException {
    ivElseifExpressionList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setElseifExpressionList


// ***** VDMTOOLS START Name=addElseifExpressionList KEEP=NO
  public void addElseifExpressionList (final IOmlNode parg) throws CGException {
    ivElseifExpressionList.add(parg);
  }
// ***** VDMTOOLS END Name=addElseifExpressionList


// ***** VDMTOOLS START Name=getElseExpression KEEP=NO
  public IOmlExpression getElseExpression () throws CGException {
    return (IOmlExpression) ivElseExpression;
  }
// ***** VDMTOOLS END Name=getElseExpression


// ***** VDMTOOLS START Name=setElseExpression KEEP=NO
  public void setElseExpression (final IOmlExpression parg) throws CGException {
    ivElseExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setElseExpression

}
;
