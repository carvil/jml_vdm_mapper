//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.jml.visitor;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class JmlPpVisitor extends JmlVisitor {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=result KEEP=NO
  public String result = null;
// ***** VDMTOOLS END Name=result

// ***** VDMTOOLS START Name=lvl KEEP=NO
  private Long lvl = null;
// ***** VDMTOOLS END Name=lvl

// ***** VDMTOOLS START Name=nl KEEP=NO
  private static final String nl = new String("\015\n");
// ***** VDMTOOLS END Name=nl

// ***** VDMTOOLS START Name=prefix KEEP=NO
  private static final String prefix = new String("new Jml");
// ***** VDMTOOLS END Name=prefix


// ***** VDMTOOLS START Name=JmlPpVisitor KEEP=NO
  public JmlPpVisitor () throws CGException {
    try {

      result = UTIL.ConvertToString(new String());
      lvl = new Long(0);
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=JmlPpVisitor


// ***** VDMTOOLS START Name=pushNL KEEP=NO
  private void pushNL () throws CGException {
    lvl = UTIL.NumberToLong(UTIL.clone(new Long(lvl.intValue() + new Long(2).intValue())));
  }
// ***** VDMTOOLS END Name=pushNL


// ***** VDMTOOLS START Name=popNL KEEP=NO
  private void popNL () throws CGException {
    lvl = UTIL.NumberToLong(UTIL.clone(new Long(lvl.intValue() - new Long(2).intValue())));
  }
// ***** VDMTOOLS END Name=popNL


// ***** VDMTOOLS START Name=getNL KEEP=NO
  private String getNL () throws CGException {

    String res = nl;
    Long cnt = lvl;
    while ( new Boolean((cnt.intValue()) > (new Long(0).intValue())).booleanValue()){

      String rhs_4 = null;
      rhs_4 = res.concat(new String(" "));
      res = UTIL.ConvertToString(UTIL.clone(rhs_4));
      cnt = UTIL.NumberToLong(UTIL.clone(new Long(cnt.intValue() - new Long(1).intValue())));
    }
    return res;
  }
// ***** VDMTOOLS END Name=getNL


// ***** VDMTOOLS START Name=printBoolField KEEP=NO
  private void printBoolField (final Boolean pval) throws CGException {

    String rhs_2 = null;
    if (pval.booleanValue()) 
      rhs_2 = new String("true");
    else 
      rhs_2 = new String("false");
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printBoolField


// ***** VDMTOOLS START Name=printCharField KEEP=NO
  private void printCharField (final Character pval) throws CGException {

    String rhs_2 = null;
    rhs_2 = new String();
    rhs_2 = rhs_2 + new Character('\'');
    rhs_2 = rhs_2 + pval;
    rhs_2 = rhs_2 + new Character('\'');
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printCharField


// ***** VDMTOOLS START Name=printNatField KEEP=NO
  private void printNatField (final Long var_1_1) throws CGException {

    UTIL.RunTime("Run-Time Error:Can not evaluate an error statement");
    return;
  }
// ***** VDMTOOLS END Name=printNatField


// ***** VDMTOOLS START Name=printRealField KEEP=NO
  private void printRealField (final Double var_1_1) throws CGException {

    UTIL.RunTime("Run-Time Error:Can not evaluate an error statement");
    return;
  }
// ***** VDMTOOLS END Name=printRealField


// ***** VDMTOOLS START Name=printNodeField KEEP=NO
  private void printNodeField (final IJmlNode pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=printNodeField


// ***** VDMTOOLS START Name=patchString KEEP=NO
  private String patchString (final String str) throws CGException {

    String res = UTIL.ConvertToString(new String());
    {

      Character ch = null;
      for (Iterator enm_21 = ((Vector) UTIL.ConvertToList(str)).iterator(); enm_21.hasNext(); ) {

        Character elem_3 = (Character) enm_21.next();
        ch = elem_3;
        if (new Boolean(UTIL.equals(ch, new Character('\\'))).booleanValue()) {

          String rhs_17 = null;
          rhs_17 = res.concat(new String("\\\\"));
          res = UTIL.ConvertToString(UTIL.clone(rhs_17));
        }
        else 
          if (new Boolean(UTIL.equals(ch, new Character('\"'))).booleanValue()) {

            String rhs_14 = null;
            rhs_14 = res.concat(new String("\\\""));
            res = UTIL.ConvertToString(UTIL.clone(rhs_14));
          }
          else 
            res = res + ch;
      }
    }
    return res;
  }
// ***** VDMTOOLS END Name=patchString


// ***** VDMTOOLS START Name=printStringField KEEP=NO
  private void printStringField (final String str) throws CGException {

    String rhs_2 = null;
    String var1_3 = null;
    var1_3 = new String("\"").concat(patchString(str));
    rhs_2 = var1_3.concat(new String("\""));
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printStringField


// ***** VDMTOOLS START Name=printSeqofField KEEP=NO
  private void printSeqofField (final Vector pval) throws CGException {

    String str = new String("[");
    Long cnt = new Long(pval.size());
    pushNL();
    String rhs_4 = null;
    rhs_4 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    while ( new Boolean((cnt.intValue()) > (new Long(0).intValue())).booleanValue()){

      Object tmpArg_v_11 = null;
      if ((1 <= new Long(new Long(new Long(pval.size()).intValue() - cnt.intValue()).intValue() + new Long(1).intValue()).intValue()) && (new Long(new Long(new Long(pval.size()).intValue() - cnt.intValue()).intValue() + new Long(1).intValue()).intValue() <= pval.size())) 
        tmpArg_v_11 = pval.get(new Long(new Long(new Long(pval.size()).intValue() - cnt.intValue()).intValue() + new Long(1).intValue()).intValue() - 1);
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      printField(tmpArg_v_11);
      String rhs_19 = null;
      rhs_19 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_19));
      if (new Boolean((cnt.intValue()) > (new Long(1).intValue())).booleanValue()) {

        String rhs_25 = null;
        String var1_26 = null;
        var1_26 = str.concat(new String(","));
        rhs_25 = var1_26.concat(getNL());
        str = UTIL.ConvertToString(UTIL.clone(rhs_25));
      }
      cnt = UTIL.NumberToLong(UTIL.clone(new Long(cnt.intValue() - new Long(1).intValue())));
    }
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String("]"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printSeqofField


// ***** VDMTOOLS START Name=printSetofField KEEP=NO
  private void printSetofField (final HashSet pval) throws CGException {

    String str = new String("{");
    Long cnt = new Long(pval.size());
    HashSet pvs = pval;
    pushNL();
    String rhs_4 = null;
    rhs_4 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    while ( new Boolean((cnt.intValue()) > (new Long(0).intValue())).booleanValue()){

      HashSet tmpSet_10 = new HashSet();
      tmpSet_10 = pvs;
      Object pv = null;
      boolean succ_12 = false;
      for (Iterator enm_14 = tmpSet_10.iterator(); enm_14.hasNext() && !succ_12; ) {

        Object tmpElem_13 = enm_14.next();
        succ_12 = true;
        pv = tmpElem_13;
      }
      if (!succ_12) 
        UTIL.RunTime("Run-Time Error:The binding environment was empty");
      {

        printField(pv);
        String rhs_17 = null;
        rhs_17 = str.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_17));
        HashSet rhs_20 = new HashSet();
        HashSet var2_22 = new HashSet();
        var2_22 = new HashSet();
        var2_22.add(pv);
        rhs_20 = (HashSet) pvs.clone();
        rhs_20.removeAll(var2_22);
        pvs = (HashSet) UTIL.clone(rhs_20);
        if (new Boolean((cnt.intValue()) > (new Long(1).intValue())).booleanValue()) {

          String rhs_27 = null;
          String var1_28 = null;
          var1_28 = str.concat(new String(","));
          rhs_27 = var1_28.concat(getNL());
          str = UTIL.ConvertToString(UTIL.clone(rhs_27));
        }
        cnt = UTIL.NumberToLong(UTIL.clone(new Long(cnt.intValue() - new Long(1).intValue())));
      }
    }
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String("}"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printSetofField


// ***** VDMTOOLS START Name=printMapField KEEP=NO
  private void printMapField (final HashMap pval) throws CGException {

    String str = new String("{");
    Long cnt = null;
    HashSet unArg_2 = new HashSet();
    unArg_2.clear();
    unArg_2.addAll(pval.keySet());
    cnt = new Long(unArg_2.size());
    HashSet pvs = new HashSet();
    pvs.clear();
    pvs.addAll(pval.keySet());
    pushNL();
    String rhs_6 = null;
    rhs_6 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    while ( new Boolean((cnt.intValue()) > (new Long(0).intValue())).booleanValue()){

      HashSet tmpSet_12 = new HashSet();
      tmpSet_12 = pvs;
      Object pv = null;
      boolean succ_14 = false;
      for (Iterator enm_16 = tmpSet_12.iterator(); enm_16.hasNext() && !succ_14; ) {

        Object tmpElem_15 = enm_16.next();
        succ_14 = true;
        pv = tmpElem_15;
      }
      if (!succ_14) 
        UTIL.RunTime("Run-Time Error:The binding environment was empty");
      {

        printField(pv);
        String rhs_19 = null;
        String var1_20 = null;
        var1_20 = str.concat(result);
        rhs_19 = var1_20.concat(new String(" |-> "));
        str = UTIL.ConvertToString(UTIL.clone(rhs_19));
        printField(pval.get(pv));
        String rhs_28 = null;
        rhs_28 = str.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_28));
        HashSet rhs_31 = new HashSet();
        HashSet var2_33 = new HashSet();
        var2_33 = new HashSet();
        var2_33.add(pv);
        rhs_31 = (HashSet) pvs.clone();
        rhs_31.removeAll(var2_33);
        pvs = (HashSet) UTIL.clone(rhs_31);
        if (new Boolean((cnt.intValue()) > (new Long(1).intValue())).booleanValue()) {

          String rhs_38 = null;
          String var1_39 = null;
          var1_39 = str.concat(new String(","));
          rhs_38 = var1_39.concat(getNL());
          str = UTIL.ConvertToString(UTIL.clone(rhs_38));
        }
        cnt = UTIL.NumberToLong(UTIL.clone(new Long(cnt.intValue() - new Long(1).intValue())));
      }
    }
    popNL();
    String rhs_47 = null;
    String var1_48 = null;
    var1_48 = str.concat(getNL());
    rhs_47 = var1_48.concat(new String("}"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_47));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printMapField


// ***** VDMTOOLS START Name=printField KEEP=NO
  private void printField (final Object fld) throws CGException {
    if (new Boolean((fld instanceof Boolean)).booleanValue()) 
      printBoolField((Boolean) fld);
    else 
      if (new Boolean((fld instanceof Character)).booleanValue()) 
        printCharField((Character) fld);
      else {
        if (new Boolean(UTIL.IsInteger(fld) && ((Number) fld).intValue() >= 0).booleanValue()) 
          printNatField(UTIL.NumberToLong(fld));
        else {
          if (new Boolean(UTIL.IsReal(fld)).booleanValue()) 
            printRealField(UTIL.NumberToReal(fld));
          else {

            Boolean cond_6 = null;
            cond_6 = new Boolean(fld instanceof IJmlNode);
            if (cond_6.booleanValue()) 
              printNodeField((IJmlNode) fld);
            else {
              printStringField(UTIL.ConvertToString(fld));
            }
          }
        }
      }
  }
// ***** VDMTOOLS END Name=printField


// ***** VDMTOOLS START Name=visitNode KEEP=NO
  public void visitNode (final IJmlNode pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitNode


// ***** VDMTOOLS START Name=visitDocument KEEP=NO
  public void visitDocument (final IJmlDocument pcmp) throws CGException {

    String str = new String("new JmlDocument(");
    Vector lxms = null;
    lxms = pcmp.getLexems();
    pushNL();
    String tmpArg_v_4 = null;
    tmpArg_v_4 = pcmp.getFilename();
    printStringField(tmpArg_v_4);
    String rhs_5 = null;
    String var1_6 = null;
    String var1_7 = null;
    var1_7 = str.concat(result);
    var1_6 = var1_7.concat(new String(","));
    rhs_5 = var1_6.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_5));
    Boolean cond_12 = null;
    cond_12 = pcmp.hasSpecifications();
    if (cond_12.booleanValue()) {

      IJmlSpecifications tmpArg_v_14 = null;
      tmpArg_v_14 = (IJmlSpecifications) pcmp.getSpecifications();
      visitSpecifications((IJmlSpecifications) tmpArg_v_14);
    }
    String rhs_15 = null;
    String var1_16 = null;
    String var1_17 = null;
    var1_17 = str.concat(result);
    var1_16 = var1_17.concat(new String(","));
    rhs_15 = var1_16.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_22 = null;
    rhs_22 = str.concat(new String("["));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    if (new Boolean((new Long(lxms.size()).intValue()) > (new Long(0).intValue())).booleanValue()) {

      pushNL();
      while ( new Boolean((new Long(lxms.size()).intValue()) > (new Long(0).intValue())).booleanValue()){

        visitLexem((IJmlLexem) (IJmlLexem) lxms.get(0));
        String rhs_37 = null;
        String var1_38 = null;
        var1_38 = str.concat(getNL());
        rhs_37 = var1_38.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_37));
        lxms = (Vector) UTIL.ConvertToList(UTIL.clone(new Vector(lxms.subList(1, lxms.size()))));
        if (new Boolean((new Long(lxms.size()).intValue()) > (new Long(0).intValue())).booleanValue()) {

          String rhs_48 = null;
          rhs_48 = str.concat(new String(","));
          str = UTIL.ConvertToString(UTIL.clone(rhs_48));
        }
      }
      popNL();
    }
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String("]"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    popNL();
    String rhs_58 = null;
    String var1_59 = null;
    var1_59 = str.concat(getNL());
    rhs_58 = var1_59.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_58));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDocument


// ***** VDMTOOLS START Name=visitLexem KEEP=NO
  public void visitLexem (final IJmlLexem pcmp) throws CGException {

    String str = new String("new JmlLexem(");
    Long tmpArg_v_3 = null;
    tmpArg_v_3 = pcmp.getLine();
    printNatField(tmpArg_v_3);
    String rhs_4 = null;
    String var1_5 = null;
    var1_5 = str.concat(result);
    rhs_4 = var1_5.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    Long tmpArg_v_10 = null;
    tmpArg_v_10 = pcmp.getColumn();
    printNatField(tmpArg_v_10);
    String rhs_11 = null;
    String var1_12 = null;
    var1_12 = str.concat(result);
    rhs_11 = var1_12.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Long tmpArg_v_17 = null;
    tmpArg_v_17 = pcmp.getLexval();
    printNatField(tmpArg_v_17);
    String rhs_18 = null;
    String var1_19 = null;
    var1_19 = str.concat(result);
    rhs_18 = var1_19.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    String tmpArg_v_24 = null;
    tmpArg_v_24 = pcmp.getText();
    printStringField(tmpArg_v_24);
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(result);
    rhs_25 = var1_26.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Long tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getType();
    printNatField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    var1_33 = str.concat(result);
    rhs_32 = var1_33.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLexem


// ***** VDMTOOLS START Name=visitThisExpression KEEP=NO
  public void visitThisExpression (final IJmlThisExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitThisExpression


// ***** VDMTOOLS START Name=visitPrimaryExpressionKeyword KEEP=NO
  public void visitPrimaryExpressionKeyword (final IJmlPrimaryExpressionKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlPrimaryExpressionOption tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlPrimaryExpressionOption) pcmp.getKeyword();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPrimaryExpressionKeyword


// ***** VDMTOOLS START Name=visitModelImport KEEP=NO
  public void visitModelImport (final IJmlModelImport pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getModel();
    printBoolField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    String tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getImport();
    printStringField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitModelImport


// ***** VDMTOOLS START Name=visitClass KEEP=NO
  public void visitClass (final IJmlClass pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlAccessDefinition) pcmp.getAccess();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlClassKind tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlClassKind) pcmp.getKind();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    String tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getIdentifier();
    printStringField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Boolean cond_37 = null;
    cond_37 = pcmp.hasInheritanceClause();
    if (cond_37.booleanValue()) {

      IJmlClassInheritanceClause tmpArg_v_40 = null;
      tmpArg_v_40 = (IJmlClassInheritanceClause) pcmp.getInheritanceClause();
      printNodeField((IJmlNode) tmpArg_v_40);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Boolean cond_48 = null;
    cond_48 = pcmp.hasInterfaceInheritance();
    if (cond_48.booleanValue()) {

      IJmlInterfaceInheritanceClause tmpArg_v_51 = null;
      tmpArg_v_51 = (IJmlInterfaceInheritanceClause) pcmp.getInterfaceInheritance();
      printNodeField((IJmlNode) tmpArg_v_51);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_52 = null;
    String var1_53 = null;
    String var1_54 = null;
    var1_54 = str.concat(result);
    var1_53 = var1_54.concat(new String(","));
    rhs_52 = var1_53.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    Vector tmpArg_v_60 = null;
    tmpArg_v_60 = pcmp.getClassBody();
    printSeqofField(tmpArg_v_60);
    String rhs_61 = null;
    String var1_62 = null;
    String var1_63 = null;
    var1_63 = str.concat(result);
    var1_62 = var1_63.concat(new String(","));
    rhs_61 = var1_62.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    Long tmpArg_v_69 = null;
    tmpArg_v_69 = pcmp.getLine();
    printNatField(tmpArg_v_69);
    String rhs_70 = null;
    String var1_71 = null;
    String var1_72 = null;
    var1_72 = str.concat(result);
    var1_71 = var1_72.concat(new String(","));
    rhs_70 = var1_71.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_70));
    Long tmpArg_v_78 = null;
    tmpArg_v_78 = pcmp.getColumn();
    printNatField(tmpArg_v_78);
    String rhs_79 = null;
    rhs_79 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_79));
    popNL();
    String rhs_83 = null;
    String var1_84 = null;
    var1_84 = str.concat(getNL());
    rhs_83 = var1_84.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_83));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClass


// ***** VDMTOOLS START Name=visitSpecifications KEEP=NO
  public void visitSpecifications (final IJmlSpecifications pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getClassList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSpecifications


// ***** VDMTOOLS START Name=visitMapValueToValueType KEEP=NO
  public void visitMapValueToValueType (final IJmlMapValueToValueType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlType) pcmp.getDomType();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlType) pcmp.getRngType();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapValueToValueType


// ***** VDMTOOLS START Name=visitMapLet KEEP=NO
  public void visitMapLet (final IJmlMapLet pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlExpression) pcmp.getDomVal();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlExpression) pcmp.getRngVal();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapLet


// ***** VDMTOOLS START Name=visitValueShape KEEP=NO
  public void visitValueShape (final IJmlValueShape pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IJmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IJmlExpression) pcmp.getExpression();
    printNodeField((IJmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueShape


// ***** VDMTOOLS START Name=visitNotKeywordUnary KEEP=NO
  public void visitNotKeywordUnary (final IJmlNotKeywordUnary pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNotKeywordUnary


// ***** VDMTOOLS START Name=visitBinaryExpression KEEP=NO
  public void visitBinaryExpression (final IJmlBinaryExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlExpression) pcmp.getLhsExpression();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlBinaryOperator tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlBinaryOperator) pcmp.getOperator();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IJmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IJmlExpression) pcmp.getRhsExpression();
    printNodeField((IJmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBinaryExpression


// ***** VDMTOOLS START Name=visitThisKeyword KEEP=NO
  public void visitThisKeyword (final IJmlThisKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitThisKeyword


// ***** VDMTOOLS START Name=visitOperationDefinitions KEEP=NO
  public void visitOperationDefinitions (final IJmlOperationDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getOperationList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationDefinitions


// ***** VDMTOOLS START Name=visitClassType KEEP=NO
  public void visitClassType (final IJmlClassType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getId();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getFieldList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClassType


// ***** VDMTOOLS START Name=visitInstanceVariableDefinitions KEEP=NO
  public void visitInstanceVariableDefinitions (final IJmlInstanceVariableDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getJmlVariables();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getJavaVariables();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInstanceVariableDefinitions


// ***** VDMTOOLS START Name=visitEnsuresClause KEEP=NO
  public void visitEnsuresClause (final IJmlEnsuresClause pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlExpression) pcmp.getEnsuresExpression();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitEnsuresClause


// ***** VDMTOOLS START Name=visitExpressionsList KEEP=NO
  public void visitExpressionsList (final IJmlExpressionsList pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExpressionsList


// ***** VDMTOOLS START Name=visitFieldSelectExpression KEEP=NO
  public void visitFieldSelectExpression (final IJmlFieldSelectExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlExpression) pcmp.getExpression();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlName tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlName) pcmp.getName();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFieldSelectExpression


// ***** VDMTOOLS START Name=visitEnumerationType KEEP=NO
  public void visitEnumerationType (final IJmlEnumerationType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlEnumLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlEnumLiteral) pcmp.getEnumLiteral();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitEnumerationType


// ***** VDMTOOLS START Name=visitUndefinedExpression KEEP=NO
  public void visitUndefinedExpression (final IJmlUndefinedExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUndefinedExpression


// ***** VDMTOOLS START Name=visitFloatLiteral KEEP=NO
  public void visitFloatLiteral (final IJmlFloatLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Double tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printRealField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFloatLiteral


// ***** VDMTOOLS START Name=visitSuperKeyword KEEP=NO
  public void visitSuperKeyword (final IJmlSuperKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSuperKeyword


// ***** VDMTOOLS START Name=visitClassKeyword KEEP=NO
  public void visitClassKeyword (final IJmlClassKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClassKeyword


// ***** VDMTOOLS START Name=visitRequiresClause KEEP=NO
  public void visitRequiresClause (final IJmlRequiresClause pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlExpression) pcmp.getRequiresExpression();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRequiresClause


// ***** VDMTOOLS START Name=visitExceptionType KEEP=NO
  public void visitExceptionType (final IJmlExceptionType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getType();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExceptionType


// ***** VDMTOOLS START Name=visitMapEnumeration KEEP=NO
  public void visitMapEnumeration (final IJmlMapEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapEnumeration


// ***** VDMTOOLS START Name=visitThrowExpression KEEP=NO
  public void visitThrowExpression (final IJmlThrowExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getException();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getParams();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitThrowExpression


// ***** VDMTOOLS START Name=visitNameId KEEP=NO
  public void visitNameId (final IJmlNameId pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getName();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNameId


// ***** VDMTOOLS START Name=visitOtherDefinitions KEEP=NO
  public void visitOtherDefinitions (final IJmlOtherDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOtherDefinitions


// ***** VDMTOOLS START Name=visitSetValueType KEEP=NO
  public void visitSetValueType (final IJmlSetValueType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetValueType


// ***** VDMTOOLS START Name=visitStarKeyword KEEP=NO
  public void visitStarKeyword (final IJmlStarKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitStarKeyword


// ***** VDMTOOLS START Name=visitPrimaryExpressions KEEP=NO
  public void visitPrimaryExpressions (final IJmlPrimaryExpressions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlPrimaryExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlPrimaryExpression) pcmp.getPrimary();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasSuffix();
    if (cond_19.booleanValue()) {

      IJmlPrimarySuffix tmpArg_v_22 = null;
      tmpArg_v_22 = (IJmlPrimarySuffix) pcmp.getSuffix();
      printNodeField((IJmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Long tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getLine();
    printNatField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getColumn();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    rhs_41 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    popNL();
    String rhs_45 = null;
    String var1_46 = null;
    var1_46 = str.concat(getNL());
    rhs_45 = var1_46.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_45));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPrimaryExpressions


// ***** VDMTOOLS START Name=visitOldName KEEP=NO
  public void visitOldName (final IJmlOldName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifier();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOldName


// ***** VDMTOOLS START Name=visitAssignableClause KEEP=NO
  public void visitAssignableClause (final IJmlAssignableClause pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getAssignableList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAssignableClause


// ***** VDMTOOLS START Name=visitForAllExpression KEEP=NO
  public void visitForAllExpression (final IJmlForAllExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlQuantifierDeclaration tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlQuantifierDeclaration) pcmp.getBindList();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpression();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitForAllExpression


// ***** VDMTOOLS START Name=visitNumericalLiteral KEEP=NO
  public void visitNumericalLiteral (final IJmlNumericalLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNumericalLiteral


// ***** VDMTOOLS START Name=visitLiteralExpression KEEP=NO
  public void visitLiteralExpression (final IJmlLiteralExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlLiteral) pcmp.getLit();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLiteralExpression


// ***** VDMTOOLS START Name=visitIfExpression KEEP=NO
  public void visitIfExpression (final IJmlIfExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlExpression) pcmp.getIfExpression();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlExpression) pcmp.getThenExpression();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IJmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IJmlExpression) pcmp.getElseExpression();
    printNodeField((IJmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIfExpression


// ***** VDMTOOLS START Name=visitVariable KEEP=NO
  public void visitVariable (final IJmlVariable pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlAccessDefinition) pcmp.getAccess();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getModel();
    printBoolField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getStatickeyword();
    printBoolField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Boolean tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getFinal();
    printBoolField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IJmlType tmpArg_v_47 = null;
    tmpArg_v_47 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    String tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getIdentifier();
    printStringField(tmpArg_v_56);
    String rhs_57 = null;
    String var1_58 = null;
    String var1_59 = null;
    var1_59 = str.concat(result);
    var1_58 = var1_59.concat(new String(","));
    rhs_57 = var1_58.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    Boolean cond_64 = null;
    cond_64 = pcmp.hasExpression();
    if (cond_64.booleanValue()) {

      IJmlExpression tmpArg_v_67 = null;
      tmpArg_v_67 = (IJmlExpression) pcmp.getExpression();
      printNodeField((IJmlNode) tmpArg_v_67);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_68 = null;
    String var1_69 = null;
    String var1_70 = null;
    var1_70 = str.concat(result);
    var1_69 = var1_70.concat(new String(","));
    rhs_68 = var1_69.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_68));
    Long tmpArg_v_76 = null;
    tmpArg_v_76 = pcmp.getLine();
    printNatField(tmpArg_v_76);
    String rhs_77 = null;
    String var1_78 = null;
    String var1_79 = null;
    var1_79 = str.concat(result);
    var1_78 = var1_79.concat(new String(","));
    rhs_77 = var1_78.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_77));
    Long tmpArg_v_85 = null;
    tmpArg_v_85 = pcmp.getColumn();
    printNatField(tmpArg_v_85);
    String rhs_86 = null;
    rhs_86 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_86));
    popNL();
    String rhs_90 = null;
    String var1_91 = null;
    var1_91 = str.concat(getNL());
    rhs_90 = var1_91.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_90));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitVariable


// ***** VDMTOOLS START Name=visitInvariantDefinition KEEP=NO
  public void visitInvariantDefinition (final IJmlInvariantDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlAccessDefinition) pcmp.getAccess();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getRedundant();
    printBoolField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IJmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IJmlExpression) pcmp.getPredicate();
    printNodeField((IJmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getLine();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getColumn();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInvariantDefinition


// ***** VDMTOOLS START Name=visitValueDefinition KEEP=NO
  public void visitValueDefinition (final IJmlValueDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlAccessDefinition) pcmp.getAccess();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getStaticMod();
    printBoolField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getFinalMod();
    printBoolField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IJmlValueShape tmpArg_v_38 = null;
    tmpArg_v_38 = (IJmlValueShape) pcmp.getShape();
    printNodeField((IJmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    Long tmpArg_v_47 = null;
    tmpArg_v_47 = pcmp.getLine();
    printNatField(tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getColumn();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    rhs_57 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    popNL();
    String rhs_61 = null;
    String var1_62 = null;
    var1_62 = str.concat(getNL());
    rhs_61 = var1_62.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueDefinition


// ***** VDMTOOLS START Name=visitUnaryExpression KEEP=NO
  public void visitUnaryExpression (final IJmlUnaryExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlUnaryOperator tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlUnaryOperator) pcmp.getOperator();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlExpression) pcmp.getExpression();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUnaryExpression


// ***** VDMTOOLS START Name=visitApplyExpression KEEP=NO
  public void visitApplyExpression (final IJmlApplyExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlExpression) pcmp.getExpression();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitApplyExpression


// ***** VDMTOOLS START Name=visitExceptionalSpec KEEP=NO
  public void visitExceptionalSpec (final IJmlExceptionalSpec pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlScope tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlScope) pcmp.getPrivacy();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExceptionalSpec


// ***** VDMTOOLS START Name=visitNatType KEEP=NO
  public void visitNatType (final IJmlNatType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLimit();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNatType


// ***** VDMTOOLS START Name=visitOldKeywordUnary KEEP=NO
  public void visitOldKeywordUnary (final IJmlOldKeywordUnary pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOldKeywordUnary


// ***** VDMTOOLS START Name=visitSetEnumeration KEEP=NO
  public void visitSetEnumeration (final IJmlSetEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetEnumeration


// ***** VDMTOOLS START Name=visitQuantifierDeclaration KEEP=NO
  public void visitQuantifierDeclaration (final IJmlQuantifierDeclaration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasBound();
    if (cond_10.booleanValue()) {

      IJmlBoundModifiers tmpArg_v_13 = null;
      tmpArg_v_13 = (IJmlBoundModifiers) pcmp.getBound();
      printNodeField((IJmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    IJmlType tmpArg_v_22 = null;
    tmpArg_v_22 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Vector tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getVars();
    printSeqofField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getLine();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Long tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getColumn();
    printNatField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitQuantifierDeclaration


// ***** VDMTOOLS START Name=visitTupleType KEEP=NO
  public void visitTupleType (final IJmlTupleType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVals();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTupleType


// ***** VDMTOOLS START Name=visitEnumLiteral KEEP=NO
  public void visitEnumLiteral (final IJmlEnumLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitEnumLiteral


// ***** VDMTOOLS START Name=visitImport KEEP=NO
  public void visitImport (final IJmlImport pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getImport();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitImport


// ***** VDMTOOLS START Name=visitPostfixExpression KEEP=NO
  public void visitPostfixExpression (final IJmlPostfixExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPrimary();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlPostfixOperation tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlPostfixOperation) pcmp.getOperation();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPostfixExpression


// ***** VDMTOOLS START Name=visitCharType KEEP=NO
  public void visitCharType (final IJmlCharType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCharType


// ***** VDMTOOLS START Name=visitCharacterLiteral KEEP=NO
  public void visitCharacterLiteral (final IJmlCharacterLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Character tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printCharField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCharacterLiteral


// ***** VDMTOOLS START Name=visitNullLiteral KEEP=NO
  public void visitNullLiteral (final IJmlNullLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNullLiteral


// ***** VDMTOOLS START Name=visitValueDefinitions KEEP=NO
  public void visitValueDefinitions (final IJmlValueDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getValueList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueDefinitions


// ***** VDMTOOLS START Name=visitBracketedExpression KEEP=NO
  public void visitBracketedExpression (final IJmlBracketedExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlExpression) pcmp.getExpression();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBracketedExpression


// ***** VDMTOOLS START Name=visitNotAssignedKeyword KEEP=NO
  public void visitNotAssignedKeyword (final IJmlNotAssignedKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNotAssignedKeyword


// ***** VDMTOOLS START Name=visitStringLiteral KEEP=NO
  public void visitStringLiteral (final IJmlStringLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitStringLiteral


// ***** VDMTOOLS START Name=visitSpecs KEEP=NO
  public void visitSpecs (final IJmlSpecs pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSpecs


// ***** VDMTOOLS START Name=visitAccessDefinition KEEP=NO
  public void visitAccessDefinition (final IJmlAccessDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlScope tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlScope) pcmp.getScope();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAccessDefinition


// ***** VDMTOOLS START Name=visitNewExpression KEEP=NO
  public void visitNewExpression (final IJmlNewExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNewExpression


// ***** VDMTOOLS START Name=visitBehaviourSpec KEEP=NO
  public void visitBehaviourSpec (final IJmlBehaviourSpec pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlScope tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlScope) pcmp.getPrivacy();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBehaviourSpec


// ***** VDMTOOLS START Name=visitInstanceOfExpression KEEP=NO
  public void visitInstanceOfExpression (final IJmlInstanceOfExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlExpression) pcmp.getExpression();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInstanceOfExpression


// ***** VDMTOOLS START Name=visitName KEEP=NO
  public void visitName (final IJmlName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasClassIdentifier();
    if (cond_10.booleanValue()) {

      String tmpArg_v_13 = null;
      tmpArg_v_13 = pcmp.getClassIdentifier();
      printStringField(tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    String tmpArg_v_22 = null;
    tmpArg_v_22 = pcmp.getIdentifier();
    printStringField(tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Long tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getLine();
    printNatField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Long tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getColumn();
    printNatField(tmpArg_v_40);
    String rhs_41 = null;
    rhs_41 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    popNL();
    String rhs_45 = null;
    String var1_46 = null;
    var1_46 = str.concat(getNL());
    rhs_45 = var1_46.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_45));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitName


// ***** VDMTOOLS START Name=visitInvariantDefinitions KEEP=NO
  public void visitInvariantDefinitions (final IJmlInvariantDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getInvariantList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInvariantDefinitions


// ***** VDMTOOLS START Name=visitSuperKeywordSuffix KEEP=NO
  public void visitSuperKeywordSuffix (final IJmlSuperKeywordSuffix pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSuperKeywordSuffix


// ***** VDMTOOLS START Name=visitFloatType KEEP=NO
  public void visitFloatType (final IJmlFloatType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFloatType


// ***** VDMTOOLS START Name=visitBooleanLiteral KEEP=NO
  public void visitBooleanLiteral (final IJmlBooleanLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printBoolField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBooleanLiteral


// ***** VDMTOOLS START Name=visitObjectType KEEP=NO
  public void visitObjectType (final IJmlObjectType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitObjectType


// ***** VDMTOOLS START Name=visitVoidType KEEP=NO
  public void visitVoidType (final IJmlVoidType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitVoidType


// ***** VDMTOOLS START Name=visitExistsExpression KEEP=NO
  public void visitExistsExpression (final IJmlExistsExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlQuantifierDeclaration tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlQuantifierDeclaration) pcmp.getBindList();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpression();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExistsExpression


// ***** VDMTOOLS START Name=visitOldKeyword KEEP=NO
  public void visitOldKeyword (final IJmlOldKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOldKeyword


// ***** VDMTOOLS START Name=visitClassInheritanceClause KEEP=NO
  public void visitClassInheritanceClause (final IJmlClassInheritanceClause pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifierList();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClassInheritanceClause


// ***** VDMTOOLS START Name=visitBody KEEP=NO
  public void visitBody (final IJmlBody pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getBody();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBody


// ***** VDMTOOLS START Name=visitField KEEP=NO
  public void visitField (final IJmlField pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getId();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitField


// ***** VDMTOOLS START Name=visitNullKeyword KEEP=NO
  public void visitNullKeyword (final IJmlNullKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNullKeyword


// ***** VDMTOOLS START Name=visitInterfaceInheritanceClause KEEP=NO
  public void visitInterfaceInheritanceClause (final IJmlInterfaceInheritanceClause pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifierList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInterfaceInheritanceClause


// ***** VDMTOOLS START Name=visitMethodSpecifications KEEP=NO
  public void visitMethodSpecifications (final IJmlMethodSpecifications pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlSpecs tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlSpecs) pcmp.getSpecs();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlSpecs tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlSpecs) pcmp.getAlso();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMethodSpecifications


// ***** VDMTOOLS START Name=visitException KEEP=NO
  public void visitException (final IJmlException pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlExceptionType tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlExceptionType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    String tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getIdentifier();
    printStringField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitException


// ***** VDMTOOLS START Name=visitNormalSpec KEEP=NO
  public void visitNormalSpec (final IJmlNormalSpec pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlScope tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlScope) pcmp.getPrivacy();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNormalSpec


// ***** VDMTOOLS START Name=visitPrimaryExpressionLiteral KEEP=NO
  public void visitPrimaryExpressionLiteral (final IJmlPrimaryExpressionLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlLiteral) pcmp.getLit();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPrimaryExpressionLiteral


// ***** VDMTOOLS START Name=visitIntegerType KEEP=NO
  public void visitIntegerType (final IJmlIntegerType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIntegerType


// ***** VDMTOOLS START Name=visitSeqValueType KEEP=NO
  public void visitSeqValueType (final IJmlSeqValueType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Long tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getLimit();
    printNatField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeqValueType


// ***** VDMTOOLS START Name=visitBlockExpression KEEP=NO
  public void visitBlockExpression (final IJmlBlockExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getBind();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlExpression) pcmp.getReturnExpr();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBlockExpression


// ***** VDMTOOLS START Name=visitSignalsClause KEEP=NO
  public void visitSignalsClause (final IJmlSignalsClause pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlException tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlException) pcmp.getException();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IJmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IJmlExpression) pcmp.getPredicate();
    printNodeField((IJmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSignalsClause


// ***** VDMTOOLS START Name=visitParameter KEEP=NO
  public void visitParameter (final IJmlParameter pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IJmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IJmlType) pcmp.getType();
    printNodeField((IJmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    String tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getIdentifier();
    printStringField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Long tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getLine();
    printNatField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Long tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getColumn();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitParameter


// ***** VDMTOOLS START Name=visitSequenceEnumeration KEEP=NO
  public void visitSequenceEnumeration (final IJmlSequenceEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSequenceEnumeration


// ***** VDMTOOLS START Name=visitResultKeyword KEEP=NO
  public void visitResultKeyword (final IJmlResultKeyword pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitResultKeyword


// ***** VDMTOOLS START Name=visitClassName KEEP=NO
  public void visitClassName (final IJmlClassName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IJmlName tmpArg_v_7 = null;
    tmpArg_v_7 = (IJmlName) pcmp.getId();
    printNodeField((IJmlNode) tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pcmp.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    rhs_22 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    String rhs_25 = null;
    rhs_25 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClassName


// ***** VDMTOOLS START Name=visitBoolType KEEP=NO
  public void visitBoolType (final IJmlBoolType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBoolType


// ***** VDMTOOLS START Name=visitOperationDefinition KEEP=NO
  public void visitOperationDefinition (final IJmlOperationDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasTrailer();
    if (cond_10.booleanValue()) {

      IJmlMethodSpecifications tmpArg_v_13 = null;
      tmpArg_v_13 = (IJmlMethodSpecifications) pcmp.getTrailer();
      printNodeField((IJmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    IJmlAccessDefinition tmpArg_v_22 = null;
    tmpArg_v_22 = (IJmlAccessDefinition) pcmp.getAccess();
    printNodeField((IJmlNode) tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Boolean tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getPure();
    printBoolField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Boolean tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getStatickeyword();
    printBoolField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Boolean tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getFinal();
    printBoolField(tmpArg_v_49);
    String rhs_50 = null;
    String var1_51 = null;
    String var1_52 = null;
    var1_52 = str.concat(result);
    var1_51 = var1_52.concat(new String(","));
    rhs_50 = var1_51.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    IJmlType tmpArg_v_58 = null;
    tmpArg_v_58 = (IJmlType) pcmp.getReturningType();
    printNodeField((IJmlNode) tmpArg_v_58);
    String rhs_59 = null;
    String var1_60 = null;
    String var1_61 = null;
    var1_61 = str.concat(result);
    var1_60 = var1_61.concat(new String(","));
    rhs_59 = var1_60.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_59));
    String tmpArg_v_67 = null;
    tmpArg_v_67 = pcmp.getIdentifier();
    printStringField(tmpArg_v_67);
    String rhs_68 = null;
    String var1_69 = null;
    String var1_70 = null;
    var1_70 = str.concat(result);
    var1_69 = var1_70.concat(new String(","));
    rhs_68 = var1_69.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_68));
    Vector tmpArg_v_76 = null;
    tmpArg_v_76 = pcmp.getParameterList();
    printSeqofField(tmpArg_v_76);
    String rhs_77 = null;
    String var1_78 = null;
    String var1_79 = null;
    var1_79 = str.concat(result);
    var1_78 = var1_79.concat(new String(","));
    rhs_77 = var1_78.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_77));
    Boolean cond_84 = null;
    cond_84 = pcmp.hasBody();
    if (cond_84.booleanValue()) {

      IJmlBody tmpArg_v_87 = null;
      tmpArg_v_87 = (IJmlBody) pcmp.getBody();
      printNodeField((IJmlNode) tmpArg_v_87);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_88 = null;
    String var1_89 = null;
    String var1_90 = null;
    var1_90 = str.concat(result);
    var1_89 = var1_90.concat(new String(","));
    rhs_88 = var1_89.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_88));
    Long tmpArg_v_96 = null;
    tmpArg_v_96 = pcmp.getLine();
    printNatField(tmpArg_v_96);
    String rhs_97 = null;
    String var1_98 = null;
    String var1_99 = null;
    var1_99 = str.concat(result);
    var1_98 = var1_99.concat(new String(","));
    rhs_97 = var1_98.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_97));
    Long tmpArg_v_105 = null;
    tmpArg_v_105 = pcmp.getColumn();
    printNatField(tmpArg_v_105);
    String rhs_106 = null;
    rhs_106 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_106));
    popNL();
    String rhs_110 = null;
    String var1_111 = null;
    var1_111 = str.concat(getNL());
    rhs_110 = var1_111.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_110));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationDefinition


// ***** VDMTOOLS START Name=visitWrappedJmlClass KEEP=NO
  public void visitWrappedJmlClass (final IJmlWrappedJmlClass pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPackage();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    String tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getRefine();
    printStringField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getImportsJava();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Vector tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getImportsJml();
    printSeqofField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IJmlClass tmpArg_v_47 = null;
    tmpArg_v_47 = (IJmlClass) pcmp.getClassVal();
    printNodeField((IJmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    Long tmpArg_v_56 = null;
    tmpArg_v_56 = pcmp.getLine();
    printNatField(tmpArg_v_56);
    String rhs_57 = null;
    String var1_58 = null;
    String var1_59 = null;
    var1_59 = str.concat(result);
    var1_58 = var1_59.concat(new String(","));
    rhs_57 = var1_58.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    Long tmpArg_v_65 = null;
    tmpArg_v_65 = pcmp.getColumn();
    printNatField(tmpArg_v_65);
    String rhs_66 = null;
    rhs_66 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_66));
    popNL();
    String rhs_70 = null;
    String var1_71 = null;
    var1_71 = str.concat(getNL());
    rhs_70 = var1_71.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_70));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitWrappedJmlClass


// ***** VDMTOOLS START Name=visitThisKeywordSuffix KEEP=NO
  public void visitThisKeywordSuffix (final IJmlThisKeywordSuffix pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getLine();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pcmp.getColumn();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    rhs_15 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    String rhs_18 = null;
    rhs_18 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitThisKeywordSuffix


// ***** VDMTOOLS START Name=visitType KEEP=NO
  public void visitType (final IJmlType pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitType


// ***** VDMTOOLS START Name=visitPrimaryExpressionOption KEEP=NO
  public void visitPrimaryExpressionOption (final IJmlPrimaryExpressionOption pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitPrimaryExpressionOption


// ***** VDMTOOLS START Name=visitTrailers KEEP=NO
  public void visitTrailers (final IJmlTrailers pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitTrailers


// ***** VDMTOOLS START Name=visitDefinitionBlock KEEP=NO
  public void visitDefinitionBlock (final IJmlDefinitionBlock pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitDefinitionBlock


// ***** VDMTOOLS START Name=visitPostfixOperation KEEP=NO
  public void visitPostfixOperation (final IJmlPostfixOperation pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPostfixOperation


// ***** VDMTOOLS START Name=visitBinaryOperator KEEP=NO
  public void visitBinaryOperator (final IJmlBinaryOperator pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBinaryOperator


// ***** VDMTOOLS START Name=visitExpression KEEP=NO
  public void visitExpression (final IJmlExpression pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitExpression


// ***** VDMTOOLS START Name=visitLiteral KEEP=NO
  public void visitLiteral (final IJmlLiteral pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitLiteral


// ***** VDMTOOLS START Name=visitPrimaryExpression KEEP=NO
  public void visitPrimaryExpression (final IJmlPrimaryExpression pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitPrimaryExpression


// ***** VDMTOOLS START Name=visitScope KEEP=NO
  public void visitScope (final IJmlScope pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitScope


// ***** VDMTOOLS START Name=visitUnaryOperator KEEP=NO
  public void visitUnaryOperator (final IJmlUnaryOperator pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUnaryOperator


// ***** VDMTOOLS START Name=visitBoundModifiers KEEP=NO
  public void visitBoundModifiers (final IJmlBoundModifiers pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBoundModifiers


// ***** VDMTOOLS START Name=visitClassKind KEEP=NO
  public void visitClassKind (final IJmlClassKind pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Long tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    Long tmpArg_v_14 = null;
    tmpArg_v_14 = pNode.getLine();
    printNatField(tmpArg_v_14);
    String rhs_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    rhs_15 = var1_16.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_15));
    Long tmpArg_v_21 = null;
    tmpArg_v_21 = pNode.getColumn();
    printNatField(tmpArg_v_21);
    String rhs_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    rhs_22 = var1_23.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_22));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClassKind


// ***** VDMTOOLS START Name=visitOperationTrailer KEEP=NO
  public void visitOperationTrailer (final IJmlOperationTrailer pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitOperationTrailer


// ***** VDMTOOLS START Name=visitPrimarySuffix KEEP=NO
  public void visitPrimarySuffix (final IJmlPrimarySuffix pNode) throws CGException {
    pNode.accept((IJmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitPrimarySuffix

}
;
