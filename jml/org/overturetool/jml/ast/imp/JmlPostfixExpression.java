//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.jml.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.jml.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class JmlPostfixExpression extends JmlExpression implements IJmlPostfixExpression {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivPrimary KEEP=NO
  private Vector ivPrimary = null;
// ***** VDMTOOLS END Name=ivPrimary

// ***** VDMTOOLS START Name=ivOperation KEEP=NO
  private IJmlPostfixOperation ivOperation = null;
// ***** VDMTOOLS END Name=ivOperation


// ***** VDMTOOLS START Name=JmlPostfixExpression KEEP=NO
  public JmlPostfixExpression () throws CGException {
    try {

      ivPrimary = new Vector();
      ivOperation = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=JmlPostfixExpression


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("PostfixExpression");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IJmlVisitor pVisitor) throws CGException {
    pVisitor.visitPostfixExpression((IJmlPostfixExpression) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=JmlPostfixExpression KEEP=NO
  public JmlPostfixExpression (final Vector p1, final IJmlPostfixOperation p2) throws CGException {

    try {

      ivPrimary = new Vector();
      ivOperation = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setPrimary(p1);
      setOperation((IJmlPostfixOperation) p2);
    }
  }
// ***** VDMTOOLS END Name=JmlPostfixExpression


// ***** VDMTOOLS START Name=JmlPostfixExpression KEEP=NO
  public JmlPostfixExpression (final Vector p1, final IJmlPostfixOperation p2, final Long line, final Long column) throws CGException {

    try {

      ivPrimary = new Vector();
      ivOperation = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setPrimary(p1);
      setOperation((IJmlPostfixOperation) p2);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=JmlPostfixExpression


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("primary");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setPrimary((Vector) data.get(fname));
    }
    {

      String fname = new String("operation");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setOperation((IJmlPostfixOperation) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getPrimary KEEP=NO
  public Vector getPrimary () throws CGException {
    return ivPrimary;
  }
// ***** VDMTOOLS END Name=getPrimary


// ***** VDMTOOLS START Name=setPrimary KEEP=NO
  public void setPrimary (final Vector parg) throws CGException {
    ivPrimary = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setPrimary


// ***** VDMTOOLS START Name=addPrimary KEEP=NO
  public void addPrimary (final IJmlNode parg) throws CGException {
    ivPrimary.add(parg);
  }
// ***** VDMTOOLS END Name=addPrimary


// ***** VDMTOOLS START Name=getOperation KEEP=NO
  public IJmlPostfixOperation getOperation () throws CGException {
    return (IJmlPostfixOperation) ivOperation;
  }
// ***** VDMTOOLS END Name=getOperation


// ***** VDMTOOLS START Name=setOperation KEEP=NO
  public void setOperation (final IJmlPostfixOperation parg) throws CGException {
    ivOperation = (IJmlPostfixOperation) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setOperation

}
;
