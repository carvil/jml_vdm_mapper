//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.jml.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.jml.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class JmlMapLet extends JmlNode implements IJmlMapLet {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivDomVal KEEP=NO
  private IJmlExpression ivDomVal = null;
// ***** VDMTOOLS END Name=ivDomVal

// ***** VDMTOOLS START Name=ivRngVal KEEP=NO
  private IJmlExpression ivRngVal = null;
// ***** VDMTOOLS END Name=ivRngVal


// ***** VDMTOOLS START Name=JmlMapLet KEEP=NO
  public JmlMapLet () throws CGException {
    try {

      ivDomVal = null;
      ivRngVal = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=JmlMapLet


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("MapLet");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IJmlVisitor pVisitor) throws CGException {
    pVisitor.visitMapLet((IJmlMapLet) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=JmlMapLet KEEP=NO
  public JmlMapLet (final IJmlExpression p1, final IJmlExpression p2) throws CGException {

    try {

      ivDomVal = null;
      ivRngVal = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setDomVal((IJmlExpression) p1);
      setRngVal((IJmlExpression) p2);
    }
  }
// ***** VDMTOOLS END Name=JmlMapLet


// ***** VDMTOOLS START Name=JmlMapLet KEEP=NO
  public JmlMapLet (final IJmlExpression p1, final IJmlExpression p2, final Long line, final Long column) throws CGException {

    try {

      ivDomVal = null;
      ivRngVal = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setDomVal((IJmlExpression) p1);
      setRngVal((IJmlExpression) p2);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=JmlMapLet


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("dom_val");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setDomVal((IJmlExpression) data.get(fname));
    }
    {

      String fname = new String("rng_val");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setRngVal((IJmlExpression) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getDomVal KEEP=NO
  public IJmlExpression getDomVal () throws CGException {
    return (IJmlExpression) ivDomVal;
  }
// ***** VDMTOOLS END Name=getDomVal


// ***** VDMTOOLS START Name=setDomVal KEEP=NO
  public void setDomVal (final IJmlExpression parg) throws CGException {
    ivDomVal = (IJmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setDomVal


// ***** VDMTOOLS START Name=getRngVal KEEP=NO
  public IJmlExpression getRngVal () throws CGException {
    return (IJmlExpression) ivRngVal;
  }
// ***** VDMTOOLS END Name=getRngVal


// ***** VDMTOOLS START Name=setRngVal KEEP=NO
  public void setRngVal (final IJmlExpression parg) throws CGException {
    ivRngVal = (IJmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setRngVal

}
;
