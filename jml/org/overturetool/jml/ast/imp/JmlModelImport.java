//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.jml.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.jml.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class JmlModelImport extends JmlNode implements IJmlModelImport {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivModel KEEP=NO
  private Boolean ivModel = null;
// ***** VDMTOOLS END Name=ivModel

// ***** VDMTOOLS START Name=ivImport KEEP=NO
  private String ivImport = null;
// ***** VDMTOOLS END Name=ivImport


// ***** VDMTOOLS START Name=JmlModelImport KEEP=NO
  public JmlModelImport () throws CGException {
    try {

      ivModel = null;
      ivImport = UTIL.ConvertToString(new String());
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=JmlModelImport


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("ModelImport");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IJmlVisitor pVisitor) throws CGException {
    pVisitor.visitModelImport((IJmlModelImport) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=JmlModelImport KEEP=NO
  public JmlModelImport (final Boolean p1, final String p2) throws CGException {

    try {

      ivModel = null;
      ivImport = UTIL.ConvertToString(new String());
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setModel(p1);
      setImport(p2);
    }
  }
// ***** VDMTOOLS END Name=JmlModelImport


// ***** VDMTOOLS START Name=JmlModelImport KEEP=NO
  public JmlModelImport (final Boolean p1, final String p2, final Long line, final Long column) throws CGException {

    try {

      ivModel = null;
      ivImport = UTIL.ConvertToString(new String());
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setModel(p1);
      setImport(p2);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=JmlModelImport


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("model");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setModel((Boolean) data.get(fname));
    }
    {

      String fname = new String("import");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setImport(UTIL.ConvertToString(data.get(fname)));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getModel KEEP=NO
  public Boolean getModel () throws CGException {
    return ivModel;
  }
// ***** VDMTOOLS END Name=getModel


// ***** VDMTOOLS START Name=setModel KEEP=NO
  public void setModel (final Boolean parg) throws CGException {
    ivModel = (Boolean) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setModel


// ***** VDMTOOLS START Name=getImport KEEP=NO
  public String getImport () throws CGException {
    return ivImport;
  }
// ***** VDMTOOLS END Name=getImport


// ***** VDMTOOLS START Name=setImport KEEP=NO
  public void setImport (final String parg) throws CGException {
    ivImport = UTIL.ConvertToString(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setImport

}
;
