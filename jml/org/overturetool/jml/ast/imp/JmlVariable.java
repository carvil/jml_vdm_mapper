//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.jml.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.jml.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class JmlVariable extends JmlNode implements IJmlVariable {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivAccess KEEP=NO
  private IJmlAccessDefinition ivAccess = null;
// ***** VDMTOOLS END Name=ivAccess

// ***** VDMTOOLS START Name=ivModel KEEP=NO
  private Boolean ivModel = null;
// ***** VDMTOOLS END Name=ivModel

// ***** VDMTOOLS START Name=ivStatickeyword KEEP=NO
  private Boolean ivStatickeyword = null;
// ***** VDMTOOLS END Name=ivStatickeyword

// ***** VDMTOOLS START Name=ivFinal KEEP=NO
  private Boolean ivFinal = null;
// ***** VDMTOOLS END Name=ivFinal

// ***** VDMTOOLS START Name=ivType KEEP=NO
  private IJmlType ivType = null;
// ***** VDMTOOLS END Name=ivType

// ***** VDMTOOLS START Name=ivIdentifier KEEP=NO
  private String ivIdentifier = null;
// ***** VDMTOOLS END Name=ivIdentifier

// ***** VDMTOOLS START Name=ivExpression KEEP=NO
  private IJmlExpression ivExpression = null;
// ***** VDMTOOLS END Name=ivExpression


// ***** VDMTOOLS START Name=JmlVariable KEEP=NO
  public JmlVariable () throws CGException {
    try {

      ivAccess = null;
      ivModel = null;
      ivStatickeyword = null;
      ivFinal = null;
      ivType = null;
      ivIdentifier = UTIL.ConvertToString(new String());
      ivExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=JmlVariable


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("Variable");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IJmlVisitor pVisitor) throws CGException {
    pVisitor.visitVariable((IJmlVariable) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=JmlVariable KEEP=NO
  public JmlVariable (final IJmlAccessDefinition p1, final Boolean p2, final Boolean p3, final Boolean p4, final IJmlType p5, final String p6, final IJmlExpression p7) throws CGException {

    try {

      ivAccess = null;
      ivModel = null;
      ivStatickeyword = null;
      ivFinal = null;
      ivType = null;
      ivIdentifier = UTIL.ConvertToString(new String());
      ivExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setAccess((IJmlAccessDefinition) p1);
      setModel(p2);
      setStatickeyword(p3);
      setFinal(p4);
      setType((IJmlType) p5);
      setIdentifier(p6);
      setExpression((IJmlExpression) p7);
    }
  }
// ***** VDMTOOLS END Name=JmlVariable


// ***** VDMTOOLS START Name=JmlVariable KEEP=NO
  public JmlVariable (final IJmlAccessDefinition p1, final Boolean p2, final Boolean p3, final Boolean p4, final IJmlType p5, final String p6, final IJmlExpression p7, final Long line, final Long column) throws CGException {

    try {

      ivAccess = null;
      ivModel = null;
      ivStatickeyword = null;
      ivFinal = null;
      ivType = null;
      ivIdentifier = UTIL.ConvertToString(new String());
      ivExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setAccess((IJmlAccessDefinition) p1);
      setModel(p2);
      setStatickeyword(p3);
      setFinal(p4);
      setType((IJmlType) p5);
      setIdentifier(p6);
      setExpression((IJmlExpression) p7);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=JmlVariable


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("access");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setAccess((IJmlAccessDefinition) data.get(fname));
    }
    {

      String fname = new String("model");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setModel((Boolean) data.get(fname));
    }
    {

      String fname = new String("statickeyword");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setStatickeyword((Boolean) data.get(fname));
    }
    {

      String fname = new String("final");
      Boolean cond_31 = null;
      cond_31 = new Boolean(data.containsKey(fname));
      if (cond_31.booleanValue()) 
        setFinal((Boolean) data.get(fname));
    }
    {

      String fname = new String("type");
      Boolean cond_40 = null;
      cond_40 = new Boolean(data.containsKey(fname));
      if (cond_40.booleanValue()) 
        setType((IJmlType) data.get(fname));
    }
    {

      String fname = new String("identifier");
      Boolean cond_49 = null;
      cond_49 = new Boolean(data.containsKey(fname));
      if (cond_49.booleanValue()) 
        setIdentifier(UTIL.ConvertToString(data.get(fname)));
    }
    {

      String fname = new String("expression");
      Boolean cond_58 = null;
      cond_58 = new Boolean(data.containsKey(fname));
      if (cond_58.booleanValue()) 
        setExpression((IJmlExpression) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getAccess KEEP=NO
  public IJmlAccessDefinition getAccess () throws CGException {
    return (IJmlAccessDefinition) ivAccess;
  }
// ***** VDMTOOLS END Name=getAccess


// ***** VDMTOOLS START Name=setAccess KEEP=NO
  public void setAccess (final IJmlAccessDefinition parg) throws CGException {
    ivAccess = (IJmlAccessDefinition) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setAccess


// ***** VDMTOOLS START Name=getModel KEEP=NO
  public Boolean getModel () throws CGException {
    return ivModel;
  }
// ***** VDMTOOLS END Name=getModel


// ***** VDMTOOLS START Name=setModel KEEP=NO
  public void setModel (final Boolean parg) throws CGException {
    ivModel = (Boolean) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setModel


// ***** VDMTOOLS START Name=getStatickeyword KEEP=NO
  public Boolean getStatickeyword () throws CGException {
    return ivStatickeyword;
  }
// ***** VDMTOOLS END Name=getStatickeyword


// ***** VDMTOOLS START Name=setStatickeyword KEEP=NO
  public void setStatickeyword (final Boolean parg) throws CGException {
    ivStatickeyword = (Boolean) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setStatickeyword


// ***** VDMTOOLS START Name=getFinal KEEP=NO
  public Boolean getFinal () throws CGException {
    return ivFinal;
  }
// ***** VDMTOOLS END Name=getFinal


// ***** VDMTOOLS START Name=setFinal KEEP=NO
  public void setFinal (final Boolean parg) throws CGException {
    ivFinal = (Boolean) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setFinal


// ***** VDMTOOLS START Name=getType KEEP=NO
  public IJmlType getType () throws CGException {
    return (IJmlType) ivType;
  }
// ***** VDMTOOLS END Name=getType


// ***** VDMTOOLS START Name=setType KEEP=NO
  public void setType (final IJmlType parg) throws CGException {
    ivType = (IJmlType) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setType


// ***** VDMTOOLS START Name=getIdentifier KEEP=NO
  public String getIdentifier () throws CGException {
    return ivIdentifier;
  }
// ***** VDMTOOLS END Name=getIdentifier


// ***** VDMTOOLS START Name=setIdentifier KEEP=NO
  public void setIdentifier (final String parg) throws CGException {
    ivIdentifier = UTIL.ConvertToString(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setIdentifier


// ***** VDMTOOLS START Name=getExpression KEEP=NO
  public IJmlExpression getExpression () throws CGException {
    return (IJmlExpression) ivExpression;
  }
// ***** VDMTOOLS END Name=getExpression


// ***** VDMTOOLS START Name=hasExpression KEEP=NO
  public Boolean hasExpression () throws CGException {
    return new Boolean(!UTIL.equals(ivExpression, null));
  }
// ***** VDMTOOLS END Name=hasExpression


// ***** VDMTOOLS START Name=setExpression KEEP=NO
  public void setExpression (final IJmlExpression parg) throws CGException {
    ivExpression = (IJmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setExpression

}
;
