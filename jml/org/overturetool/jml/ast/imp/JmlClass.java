//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 07-Jul-2008 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 06-Jun-2008 09:02:11)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.jml.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.jml.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class JmlClass extends JmlNode implements IJmlClass {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivAccess KEEP=NO
  private IJmlAccessDefinition ivAccess = null;
// ***** VDMTOOLS END Name=ivAccess

// ***** VDMTOOLS START Name=ivKind KEEP=NO
  private IJmlClassKind ivKind = null;
// ***** VDMTOOLS END Name=ivKind

// ***** VDMTOOLS START Name=ivIdentifier KEEP=NO
  private String ivIdentifier = null;
// ***** VDMTOOLS END Name=ivIdentifier

// ***** VDMTOOLS START Name=ivInheritanceClause KEEP=NO
  private IJmlClassInheritanceClause ivInheritanceClause = null;
// ***** VDMTOOLS END Name=ivInheritanceClause

// ***** VDMTOOLS START Name=ivInterfaceInheritance KEEP=NO
  private IJmlInterfaceInheritanceClause ivInterfaceInheritance = null;
// ***** VDMTOOLS END Name=ivInterfaceInheritance

// ***** VDMTOOLS START Name=ivClassBody KEEP=NO
  private Vector ivClassBody = null;
// ***** VDMTOOLS END Name=ivClassBody


// ***** VDMTOOLS START Name=JmlClass KEEP=NO
  public JmlClass () throws CGException {
    try {

      ivAccess = null;
      ivKind = null;
      ivIdentifier = UTIL.ConvertToString(new String());
      ivInheritanceClause = null;
      ivInterfaceInheritance = null;
      ivClassBody = new Vector();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=JmlClass


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("Class");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IJmlVisitor pVisitor) throws CGException {
    pVisitor.visitClass((IJmlClass) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=JmlClass KEEP=NO
  public JmlClass (final IJmlAccessDefinition p1, final IJmlClassKind p2, final String p3, final IJmlClassInheritanceClause p4, final IJmlInterfaceInheritanceClause p5, final Vector p6) throws CGException {

    try {

      ivAccess = null;
      ivKind = null;
      ivIdentifier = UTIL.ConvertToString(new String());
      ivInheritanceClause = null;
      ivInterfaceInheritance = null;
      ivClassBody = new Vector();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setAccess((IJmlAccessDefinition) p1);
      setKind((IJmlClassKind) p2);
      setIdentifier(p3);
      setInheritanceClause((IJmlClassInheritanceClause) p4);
      setInterfaceInheritance((IJmlInterfaceInheritanceClause) p5);
      setClassBody(p6);
    }
  }
// ***** VDMTOOLS END Name=JmlClass


// ***** VDMTOOLS START Name=JmlClass KEEP=NO
  public JmlClass (final IJmlAccessDefinition p1, final IJmlClassKind p2, final String p3, final IJmlClassInheritanceClause p4, final IJmlInterfaceInheritanceClause p5, final Vector p6, final Long line, final Long column) throws CGException {

    try {

      ivAccess = null;
      ivKind = null;
      ivIdentifier = UTIL.ConvertToString(new String());
      ivInheritanceClause = null;
      ivInterfaceInheritance = null;
      ivClassBody = new Vector();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setAccess((IJmlAccessDefinition) p1);
      setKind((IJmlClassKind) p2);
      setIdentifier(p3);
      setInheritanceClause((IJmlClassInheritanceClause) p4);
      setInterfaceInheritance((IJmlInterfaceInheritanceClause) p5);
      setClassBody(p6);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=JmlClass


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("access");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setAccess((IJmlAccessDefinition) data.get(fname));
    }
    {

      String fname = new String("kind");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setKind((IJmlClassKind) data.get(fname));
    }
    {

      String fname = new String("identifier");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setIdentifier(UTIL.ConvertToString(data.get(fname)));
    }
    {

      String fname = new String("inheritance_clause");
      Boolean cond_31 = null;
      cond_31 = new Boolean(data.containsKey(fname));
      if (cond_31.booleanValue()) 
        setInheritanceClause((IJmlClassInheritanceClause) data.get(fname));
    }
    {

      String fname = new String("interface_inheritance");
      Boolean cond_40 = null;
      cond_40 = new Boolean(data.containsKey(fname));
      if (cond_40.booleanValue()) 
        setInterfaceInheritance((IJmlInterfaceInheritanceClause) data.get(fname));
    }
    {

      String fname = new String("class_body");
      Boolean cond_49 = null;
      cond_49 = new Boolean(data.containsKey(fname));
      if (cond_49.booleanValue()) 
        setClassBody((Vector) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getAccess KEEP=NO
  public IJmlAccessDefinition getAccess () throws CGException {
    return (IJmlAccessDefinition) ivAccess;
  }
// ***** VDMTOOLS END Name=getAccess


// ***** VDMTOOLS START Name=setAccess KEEP=NO
  public void setAccess (final IJmlAccessDefinition parg) throws CGException {
    ivAccess = (IJmlAccessDefinition) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setAccess


// ***** VDMTOOLS START Name=getKind KEEP=NO
  public IJmlClassKind getKind () throws CGException {
    return (IJmlClassKind) ivKind;
  }
// ***** VDMTOOLS END Name=getKind


// ***** VDMTOOLS START Name=setKind KEEP=NO
  public void setKind (final IJmlClassKind parg) throws CGException {
    ivKind = (IJmlClassKind) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setKind


// ***** VDMTOOLS START Name=getIdentifier KEEP=NO
  public String getIdentifier () throws CGException {
    return ivIdentifier;
  }
// ***** VDMTOOLS END Name=getIdentifier


// ***** VDMTOOLS START Name=setIdentifier KEEP=NO
  public void setIdentifier (final String parg) throws CGException {
    ivIdentifier = UTIL.ConvertToString(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setIdentifier


// ***** VDMTOOLS START Name=getInheritanceClause KEEP=NO
  public IJmlClassInheritanceClause getInheritanceClause () throws CGException {
    return (IJmlClassInheritanceClause) ivInheritanceClause;
  }
// ***** VDMTOOLS END Name=getInheritanceClause


// ***** VDMTOOLS START Name=hasInheritanceClause KEEP=NO
  public Boolean hasInheritanceClause () throws CGException {
    return new Boolean(!UTIL.equals(ivInheritanceClause, null));
  }
// ***** VDMTOOLS END Name=hasInheritanceClause


// ***** VDMTOOLS START Name=setInheritanceClause KEEP=NO
  public void setInheritanceClause (final IJmlClassInheritanceClause parg) throws CGException {
    ivInheritanceClause = (IJmlClassInheritanceClause) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setInheritanceClause


// ***** VDMTOOLS START Name=getInterfaceInheritance KEEP=NO
  public IJmlInterfaceInheritanceClause getInterfaceInheritance () throws CGException {
    return (IJmlInterfaceInheritanceClause) ivInterfaceInheritance;
  }
// ***** VDMTOOLS END Name=getInterfaceInheritance


// ***** VDMTOOLS START Name=hasInterfaceInheritance KEEP=NO
  public Boolean hasInterfaceInheritance () throws CGException {
    return new Boolean(!UTIL.equals(ivInterfaceInheritance, null));
  }
// ***** VDMTOOLS END Name=hasInterfaceInheritance


// ***** VDMTOOLS START Name=setInterfaceInheritance KEEP=NO
  public void setInterfaceInheritance (final IJmlInterfaceInheritanceClause parg) throws CGException {
    ivInterfaceInheritance = (IJmlInterfaceInheritanceClause) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setInterfaceInheritance


// ***** VDMTOOLS START Name=getClassBody KEEP=NO
  public Vector getClassBody () throws CGException {
    return ivClassBody;
  }
// ***** VDMTOOLS END Name=getClassBody


// ***** VDMTOOLS START Name=setClassBody KEEP=NO
  public void setClassBody (final Vector parg) throws CGException {
    ivClassBody = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setClassBody


// ***** VDMTOOLS START Name=addClassBody KEEP=NO
  public void addClassBody (final IJmlNode parg) throws CGException {
    ivClassBody.add(parg);
  }
// ***** VDMTOOLS END Name=addClassBody

}
;
